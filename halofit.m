(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["Halofit`"]


HaloFitPS::usage="Applies nonlinear corrections using the Halofit algorithm (Smith et al 2003)"
HaloFitInit::usage="Initialize functions in order to apply corrections to a new linear power spectrum. Needs to be called before HaloFitPS and everytime the linear power spectrum changes."


Begin["`Private`"]


deltaLsq[k_?NumericQ]:=linearPS[k]k^3/(2 Pi^2);


sigmaSq[R_?NumericQ] :=NIntegrate[deltaLsq[Exp@lk]Exp[-Exp[2lk] R^2],{lk,Log[10^-6],Log[10^4]},PrecisionGoal->5]


(*if omega_m < 1 and lambda = 0*)
f1a=omegaM^-.0732;
f2a=omegaM^-.1423;
f3a=omegaM^.0725;


(*if omega_m + lambda = 1*)
f1b=omegaM^-.0307;
f2b=omegaM^-.0585;
f3b=omegaM^.0743;


(*interpolation of the two*)
f1=(1-omegaM-omegaL)/(1-omegaM)f1a+omegaL/(1-omegaM) f1b;
f2=(1-omegaM-omegaL)/(1-omegaM)f2a+omegaL/(1-omegaM)f2b;
f3=(1-omegaM-omegaL)/(1-omegaM)f3a+omegaL/(1-omegaM)f3b;


an:=10^(1.4861+1.8369 neff+1.6762 neff^2 +0.794neff^3+0.167neff^4-0.6206curve);
bn:=10^(.9463+.9466neff+.3084neff^2-.94curve);
cn:=10^(-.2807+.6669neff+.3214neff^2-.0793curve);
mun:=10^(-3.5442+.1908neff);
nun:=10^(.9589+1.2857neff);
gamman:=.8649+.2989neff+.1631curve;
alphan:=1.3884+.34neff-.1452neff^2;
betan:=.8291+.9854neff+.3401neff^2;


deltaHsqPrime[k_]:=an (k/ksig)^(3f1)/(1+bn (k/ksig)^f2+(cn f3 k/ksig)^(3-gamman))


deltaHsq[k_]:=deltaHsqPrime[k]/(1+ ksig/k (mun+ nun ksig/k))


f[y_]:=y/4+y^2/8;


deltaQsq[k_]:=deltaLsq[k]*(1+deltaLsq[k])^betan/(1+alphan deltaLsq[k])Exp[-f[k/ksig]];


deltaNLsq[k_]:=deltaQsq[k]+deltaHsq[k];


nonlinearPS[k_]:=deltaNLsq[k]*2Pi^2/k^3;


HaloFitPS[k_?NumericQ,OmegaM_,OmegaL_,LinearPS_]:=Block[{linearPS=LinearPS,omegaM=OmegaM,omegaL=OmegaL},
nonlinearPS[k]];


(*clear memoized variables*)
HaloFitInit[LinearPS_]:=Block[{linearPS=LinearPS},
ksig=x/.FindRoot[sigmaSq[1/x]==1,{x,1}];
neff=-3+NIntegrate[deltaLsq[Exp@lk]2Exp[2lk]/ksig^2Exp[-Exp[2lk]/ksig^2],{lk,Log[10^-6],Log[10^4]},PrecisionGoal->5];
curve=NIntegrate[deltaLsq[Exp@lk]4Exp[2lk]/ksig^2Exp[-Exp[2lk]/ksig^2]-deltaLsq[Exp@lk]4Exp[4lk]/ksig^4Exp[-Exp[2lk]/ksig^2],{lk,Log[10^-6],Log[10^4]},PrecisionGoal->5];
];


End[ ]
EndPackage[ ]
