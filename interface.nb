(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    328754,       6152]
NotebookOptionsPosition[    326111,       6061]
NotebookOutlinePosition[    326623,       6081]
CellTagsIndexPosition[    326580,       6078]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preamble", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<cosmomathicaInterface`\>\"", 
  "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Transfer", "::", "usage"}], "=", 
    "\"\<This function provides an interface to Eisenstein&Hu's fitting \
formula for the transfer function. It takes the reduced total matter density \
\!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\), the fraction of baryons \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(b\)]\)/\!\(\*SubscriptBox[\(\
\[CapitalOmega]\), \(M\)]\), the CMB temperature and the dimensionless Hubble \
constant as input, and returns the sound horizon, the peak k, the transfer \
function...\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Halofit", "::", "usage"}], "=", 
    "\"\<This function provides an interface to the halofit algorithm by R. \
E. Smith et al. (reimplemented in C by Martin Kilbinger). It takes the total \
matter density \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(M\)]\), the vacuum \
energy density \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(L\)]\), a shape \
factor, \!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\), \!\(\*SubscriptBox[\(n\), \
\(s\)]\), \!\(\*SubscriptBox[\(\[Beta]\), \(p\)]\), and a fixed redshift \!\(\
\*SubscriptBox[\(z\), \(0\)]\) as input, and returns the nonlinear matter \
power spectrum (computed in three ways: ...) at 20 different values of the \
scale factor and the convergence power spectrum in tabulated form.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CosmicEmu", "::", "usage"}], "=", 
    "\"\<This function provides an interface to the CosmicEmulator by Earl \
Lawrence. It takes \!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\), \
\!\(\*SubscriptBox[\(\[Omega]\), \(b\)]\), \!\(\*SubscriptBox[\(\[Sigma]\), \
\(8\)]\), \!\(\*SubscriptBox[\(n\), \(s\)]\), and the equation of state w, \
and returns the nonlinear matter power spectrum at five different redshifts \
as well as ...\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "usage"}], "=", 
   "\"\<This function provides an interface to CAMB by Antony Lewis and \
Anthony Challinor. It takes \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(C\)]\), \
..., as well as a number of options as input, and returns various \
cosmological quantities. The distinction between parameters and options is in \
principle arbitrary. However, since some physical parameters are often \
assumed to take on a default value, they are being interpreted as an option \
here. To see the default options, type `Options[CAMB]`.\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Tcmb", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OmegaNu", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"YHe", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MasslessNeutrinos", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MassiveNeutrinos", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NuMassDegeneracies", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NuMassFractions", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarInitialCondition", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NonLinear", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantCMB", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantTransfer", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantCls", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarSpectralIndex", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarRunning", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TensorSpectralIndex", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RatioScalarTensorAmplitudes", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ScalarPowerAmplitude", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PivotScalar", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PivotTensor", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DoReionization", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"UseOpticalDepth", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OpticalDepth", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReionizationRedshift", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReionizationFraction", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ReionizationDeltaRedshift", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TransferHighPrecision", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantScalars", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantVectors", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantTensors", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantZstar", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WantZdrag", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OutputNormalization", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxEll", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxEtaK", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxEtaKTensor", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxEllTensor", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TransferKmax", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TransferKperLogInt", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TransferRedshifts", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AccuratePolarization", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AccurateReionization", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AccurateBB", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DoLensing", "::", "usage"}], "=", "\"\<An option for CAMB\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OnlyTransfers", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DerivedParameters", "::", "usage"}], "=", 
   "\"\<An option for CAMB\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MassiveNuMethod", "::", "usage"}], "=", 
    "\"\<An option for CAMB\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Eigenstates"}], "=", 
   "\"\<NuMassEigenstates and NuMassFractions must have the same length  (can \
be zero).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "InvalidOption"}], "=", 
   "\"\<Option `1` is '`2`', but must be one of the following: `3`\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Lists"}], "=", 
   "\"\<The following options need to be non-empty lists of the same length: \
`1`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Error"}], "=", 
   "\"\<CAMB exited with the following error code: `1`\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Interface", "::", "LinkBroken"}], "=", 
   "\"\<`1` crashed. See if there is anything useful on stdout.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Interface", "::", "OutsideBounds"}], "=", 
   "\"\<Parameter out of bounds. `5` requires `3` <= `1` <= `4`, but you have \
`1`=`2`.\>\""}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"$location", "=", 
   RowBox[{"DirectoryName", "[", "$InputFileName", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bool2int", "[", "b_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"b", ",", "1", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"validatestring", "[", 
    RowBox[{"val_", ",", "name_", ",", "poss_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"MemberQ", "[", 
       RowBox[{"poss", ",", "val"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"CAMB", "::", "InvalidOption"}], ",", "name", ",", "val", ",", 
        RowBox[{"StringJoin", "@@", 
         RowBox[{"Riffle", "[", 
          RowBox[{"poss", ",", "\"\<, \>\""}], "]"}]}]}], "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"validatelimits", "[", 
    RowBox[{
    "val_", ",", "name_", ",", "lower_", ",", "upper_", ",", "module_"}], 
    "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"lower", "\[LessEqual]", "val", "\[LessEqual]", "upper"}], 
       ")"}]}], ",", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"Interface", "::", "OutsideBounds"}], ",", "name", ",", "val",
         ",", "lower", ",", "upper", ",", "module"}], "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"validatelists", "[", "list_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"1", "!=", 
      RowBox[{"Length", "@", 
       RowBox[{"Union", "[", 
        RowBox[{"Length", "/@", "list"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"CAMB", "::", "Lists"}], ",", "list"}], "]"}], ";", 
      RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["CAMB", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "[", 
    RowBox[{
     RowBox[{"OmegaC_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaB_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaL_", "?", "NumericQ"}], ",", 
     RowBox[{"h_", "?", "NumericQ"}], ",", 
     RowBox[{"w_", "?", "NumericQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "j", ",", "link", ",", "result", ",", "resultfloat", ",", "resultint", 
       ",", "floats", ",", "ints", ",", "initialcond", ",", "nonlinear", ",", 
       "massivenu", ",", "limits", ",", "check", ",", "getDimensions", ",", 
       "dimensions", ",", "array"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"getDimensions", "[", "list_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ";", 
          RowBox[{"r", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"i", "<", 
             RowBox[{"Length", "@", "list"}]}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"r", ",", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ";;", 
                  RowBox[{"i", "+", 
                   RowBox[{"list", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], "]"}]}], "]"}],
              ";", 
             RowBox[{"i", "=", 
              RowBox[{"i", "+", "1", "+", 
               RowBox[{"list", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "r"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "some", " ", "parameters", " ", "must", " ", "be", " ", "within", " ", 
        "certain", " ", "limits"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"limits", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ReionizationFraction", ",", "0", ",", "1.5"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"OpticalDepth", ",", "0", ",", ".9"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"h", ",", "\"\<h\>\"", ",", ".2", ",", "1."}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Tcmb", ",", "2.7", ",", "2.8"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"YHe", ",", ".2", ",", ".8"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"MasslessNeutrinos", ",", "0", ",", "3.1"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"MassiveNeutrinos", "?"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "OmegaB", ",", 
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)\>\"", ",", 
           RowBox[{".001", "/", 
            RowBox[{"h", "^", "2"}]}], ",", 
           RowBox[{"1.", "/", 
            RowBox[{"h", "^", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "OmegaC", " ", ",", 
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(C\)]\)\>\"", ",", 
           RowBox[{"0.", "/", 
            RowBox[{"h", "^", "2"}]}], ",", 
           RowBox[{"3.", "/", 
            RowBox[{"h", "^", "2"}]}]}], "}"}]}], "\[IndentingNewLine]", 
        "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"validatelists", "[", 
       RowBox[{"OptionValue", "@", 
        RowBox[{"{", 
         RowBox[{
         "ScalarSpectralIndex", ",", "ScalarRunning", ",", 
          "TensorSpectralIndex", ",", "RatioScalarTensorAmplitudes", ",", 
          "ScalarPowerAmplitude"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validatelists", "[", 
       RowBox[{"OptionValue", "@", 
        RowBox[{"{", 
         RowBox[{"NuMassDegeneracies", ",", "NuMassFractions"}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"validatelimits", "[", 
         RowBox[{
          RowBox[{"Sequence", "@@", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumericQ", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "#", ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"OptionValue", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "~", "Join",
               "~", 
              RowBox[{"Rest", "@", "#"}]}]}], "]"}]}], ",", "\"\<CAMB\>\""}], 
         "]"}], "&"}], "/@", "limits"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"initialcond", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<vector\>\"", ",", "\"\<adiabatic\>\"", ",", "\"\<iso_CDM\>\"", 
         ",", "\"\<iso_baryon\>\"", ",", "\"\<iso_neutrino\>\"", ",", 
         "\"\<iso_neutrino_vel\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nonlinear", "=", 
       RowBox[{"{", 
        RowBox[{"\"\<none\>\"", ",", "\"\<pk\>\"", ",", "\"\<lens\>\""}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"massivenu", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<int\>\"", ",", "\"\<trunc\>\"", ",", "\"\<approx\>\"", ",", 
         "\"\<best\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"validatestring", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "ScalarInitialCondition", "]"}], ",", 
        "\"\<ScalarInitialCondition\>\"", ",", "initialcond"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validatestring", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "NonLinear", "]"}], ",", 
        "\"\<NonLinear\>\"", ",", "nonlinear"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validatestring", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "MassiveNuMethod", "]"}], ",", 
        "\"\<MassiveNuMethod\>\"", ",", "massivenu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"floats", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"OmegaC", ",", "OmegaB", ",", "OmegaL", ",", 
          RowBox[{"h", "*", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "OmegaNu", ",", "Tcmb", ",", "YHe", ",", "MasslessNeutrinos", ",",
              "NuMassDegeneracies", ",", "NuMassFractions", ",", 
             "ScalarSpectralIndex", ",", "ScalarRunning", ",", 
             "TensorSpectralIndex", ",", "RatioScalarTensorAmplitudes", ",", 
             "ScalarPowerAmplitude", ",", "PivotScalar", ",", "PivotTensor", 
             ",", "OpticalDepth", ",", "ReionizationRedshift", ",", 
             "ReionizationFraction", ",", "ReionizationDeltaRedshift", ",", 
             "MaxEtaK", ",", "MaxEtaKTensor", ",", "TransferKmax", ",", 
             "TransferRedshifts"}], "}"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ints", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"OptionValue", "[", "MassiveNeutrinos", "]"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "[", "NuMassFractions", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"initialcond", ",", 
              RowBox[{"OptionValue", "[", "ScalarInitialCondition", "]"}]}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"nonlinear", ",", 
              RowBox[{"OptionValue", "[", "NonLinear", "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "@", "ScalarSpectralIndex"}]}], ",", 
          RowBox[{"bool2int", "/@", 
           RowBox[{"OptionValue", "@", 
            RowBox[{"{", 
             RowBox[{
             "DoReionization", ",", "UseOpticalDepth", ",", 
              "TransferHighPrecision", ",", "WantCMB", ",", "WantTransfer", 
              ",", "WantCls", ",", "WantScalars", ",", "WantVectors", ",", 
              "WantTensors", ",", "WantZstar", ",", " ", "WantZdrag"}], 
             "}"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "OutputNormalization", ",", "MaxEll", ",", "MaxEllTensor", ",", 
             "TransferKperLogInt"}], "}"}]}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "@", "TransferRedshifts"}]}], ",", 
          RowBox[{"bool2int", "/@", 
           RowBox[{"OptionValue", "@", 
            RowBox[{"{", 
             RowBox[{
             "AccuratePolarization", ",", "AccurateReionization", ",", 
              "AccurateBB", ",", "DoLensing", ",", "OnlyTransfers", ",", 
              "DerivedParameters"}], "}"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"massivenu", ",", 
              RowBox[{"OptionValue", "[", "MassiveNuMethod", "]"}]}], "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"ints", ",", "floats"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"$location", "<>", "\"\<ext/camb\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Global`CAMBrun", "[", 
        RowBox[{
         RowBox[{"N", "/@", "floats"}], ",", "ints"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ResetDirectory", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"result", "\[Equal]", "$Failed"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Interface", "::", "LinkBroken"}], ",", "\"\<CAMB\>\""}], 
          "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"resultfloat", ",", "resultint"}], "}"}], "=", "result"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"resultint", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"CAMB", "::", "Error"}], ",", 
           RowBox[{"resultint", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"resultint", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"resultint", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"dimensions", "=", 
       RowBox[{"getDimensions", "@", "resultint"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"array", "=", 
          RowBox[{"Take", "[", 
           RowBox[{"resultfloat", ",", 
            RowBox[{"Times", "@@", "d"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"resultfloat", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"resultfloat", ",", 
            RowBox[{"Times", "@@", "d"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"resultfloat", ",", 
           RowBox[{"ArrayReshape", "[", 
            RowBox[{"array", ",", "d"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "dimensions"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"j", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<age\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<zstar\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<rstar\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<100thetastar\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<zdrag\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "5"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<rdrag\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "6"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<kD\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "7"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<100thetaD\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "8"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<zEQ\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "9"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<100thetaEQ\>\"", "]"}], "\[Rule]", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "10"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<sigma8\>\"", "]"}], "->", 
           RowBox[{"resultfloat", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "WantScalars", "]"}], ",", 
            RowBox[{
             RowBox[{"CAMB", "[", "\"\<CLscalar\>\"", "]"}], "\[Rule]", 
             RowBox[{"Transpose", "@", 
              RowBox[{"First", "@", 
               RowBox[{"Transpose", "[", 
                RowBox[{"resultfloat", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "++"}], "]"}], "]"}], "]"}]}]}]}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "WantVectors", "]"}], ",", 
            RowBox[{
             RowBox[{"CAMB", "[", "\"\<CLvector\>\"", "]"}], "\[Rule]", 
             RowBox[{"Transpose", "@", 
              RowBox[{"First", "@", 
               RowBox[{"Transpose", "[", 
                RowBox[{"resultfloat", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "++"}], "]"}], "]"}], "]"}]}]}]}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "WantTensors", "]"}], ",", 
            RowBox[{
             RowBox[{"CAMB", "[", "\"\<CLtensor\>\"", "]"}], "->", 
             RowBox[{"Transpose", "@", 
              RowBox[{"First", "@", 
               RowBox[{"Transpose", "[", 
                RowBox[{"resultfloat", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "++"}], "]"}], "]"}], "]"}]}]}]}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "WantTransfer", "]"}], ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"Flatten", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"CAMB", "[", 
                    RowBox[{"\"\<PSlinear\>\"", "<>", 
                    RowBox[{"ToString", "@", "k"}]}], "]"}], "->", 
                   RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Exp", "@", 
                    RowBox[{"resultfloat", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"resultfloat", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}]}]}], "}"}]}]}], ",",
                   "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"CAMB", "[", 
                    RowBox[{"\"\<PSnonlinear\>\"", "<>", 
                    RowBox[{"ToString", "@", "k"}]}], "]"}], "->", 
                   RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Exp", "@", 
                    RowBox[{"resultfloat", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "++"}], "]"}], "]"}]}], ",", 
                    RowBox[{"Flatten", "@", 
                    RowBox[{"resultfloat", "[", 
                    RowBox[{"[", 
                    RowBox[{"++", "j"}], "]"}], "]"}]}]}], "}"}]}]}]}], "}"}],
                 ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"OptionValue", "@", "ScalarSpectralIndex"}]}]}], 
                 "}"}]}], "\[IndentingNewLine]", "]"}]}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<ints\>\"", "]"}], "->", "resultint"}], 
          ",", 
          RowBox[{
           RowBox[{"CAMB", "[", "\"\<floats\>\"", "]"}], "->", 
           "resultfloat"}]}], "\[IndentingNewLine]", "}"}], ",", "Null"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CAMB", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tcmb", "\[Rule]", "2.7255"}], ",", 
     RowBox[{"OmegaNu", "\[Rule]", "0"}], ",", 
     RowBox[{"YHe", "\[Rule]", ".24"}], ",", 
     RowBox[{"MasslessNeutrinos", "\[Rule]", "3.046"}], ",", 
     RowBox[{"MassiveNeutrinos", "\[Rule]", "0"}], ",", 
     RowBox[{"NuMassDegeneracies", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"NuMassFractions", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"ScalarInitialCondition", "\[Rule]", "\"\<adiabatic\>\""}], ",", 
     
     RowBox[{"NonLinear", "\[Rule]", "\"\<none\>\""}], ",", 
     RowBox[{"WantCMB", "\[Rule]", "True"}], ",", 
     RowBox[{"WantTransfer", "\[Rule]", "True"}], ",", 
     RowBox[{"WantCls", "\[Rule]", "True"}], ",", 
     RowBox[{"ScalarSpectralIndex", "\[Rule]", 
      RowBox[{"{", ".96", "}"}]}], ",", 
     RowBox[{"ScalarRunning", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"TensorSpectralIndex", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"RatioScalarTensorAmplitudes", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"ScalarPowerAmplitude", "\[Rule]", 
      RowBox[{"{", "2.1*^-9", "}"}]}], ",", 
     RowBox[{"PivotScalar", "\[Rule]", ".05"}], ",", 
     RowBox[{"PivotTensor", "\[Rule]", ".05"}], ",", 
     RowBox[{"DoReionization", "\[Rule]", "True"}], ",", 
     RowBox[{"UseOpticalDepth", "\[Rule]", "False"}], ",", 
     RowBox[{"OpticalDepth", "\[Rule]", "0."}], ",", 
     RowBox[{"ReionizationRedshift", "\[Rule]", "10."}], ",", 
     RowBox[{"ReionizationFraction", "\[Rule]", "1."}], ",", 
     RowBox[{"ReionizationDeltaRedshift", "\[Rule]", ".5"}], ",", 
     RowBox[{"TransferHighPrecision", "\[Rule]", "False"}], ",", 
     RowBox[{"WantScalars", "\[Rule]", "True"}], ",", 
     RowBox[{"WantVectors", "\[Rule]", "True"}], ",", 
     RowBox[{"WantTensors", "\[Rule]", "True"}], ",", 
     RowBox[{"WantZstar", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"WantZdrag", "\[Rule]", "True"}], ",", 
     RowBox[{"OutputNormalization", "\[Rule]", "1"}], ",", 
     RowBox[{"MaxEll", "\[Rule]", "1500"}], ",", 
     RowBox[{"MaxEtaK", "\[Rule]", "3000."}], ",", 
     RowBox[{"MaxEtaKTensor", "\[Rule]", "800."}], ",", 
     RowBox[{"MaxEllTensor", "\[Rule]", "400"}], ",", 
     RowBox[{"TransferKmax", "\[Rule]", ".9"}], ",", 
     RowBox[{"TransferKperLogInt", "\[Rule]", "0"}], ",", 
     RowBox[{"TransferRedshifts", "\[Rule]", 
      RowBox[{"{", "0.", "}"}]}], ",", 
     RowBox[{"AccuratePolarization", "\[Rule]", "True"}], ",", 
     RowBox[{"AccurateReionization", "\[Rule]", "False"}], ",", 
     RowBox[{"AccurateBB", "\[Rule]", "False"}], ",", 
     RowBox[{"DoLensing", "\[Rule]", "True"}], ",", 
     RowBox[{"OnlyTransfers", "\[Rule]", "False"}], ",", 
     RowBox[{"DerivedParameters", "\[Rule]", "True"}], ",", 
     RowBox[{"MassiveNuMethod", "\[Rule]", "\"\<best\>\""}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "validatestring", "]"}], "=", 
   RowBox[{"Options", "[", "CAMB", "]"}]}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transfer", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Transfer", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Transfer", "[", 
     RowBox[{
      RowBox[{"omegaM_", "?", "NumericQ"}], ",", 
      RowBox[{"fBaryon_", "?", "NumericQ"}], ",", 
      RowBox[{"Tcmb_", "?", "NumericQ"}], ",", 
      RowBox[{"h_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "result", ",", "link", ",", "krange", ",", "fitonek", ",", "horizon", 
        ",", "peak"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"link", "=", 
        RowBox[{"Install", "[", 
         RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Global`TFSetParameters", "[", 
        RowBox[{
         RowBox[{"N", "@", "omegaM"}], ",", 
         RowBox[{"N", "@", "fBaryon"}], ",", 
         RowBox[{"N", "@", "Tcmb"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fitonek", "[", "k_", "]"}], ":=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sequence", "@@", 
           RowBox[{"Global`TFFitOneK", "[", "k", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Global`TFNoWiggles", "[", 
           RowBox[{
            RowBox[{"N", "@", "omegaM"}], ",", 
            RowBox[{"N", "@", "fBaryon"}], ",", 
            RowBox[{"N", "@", "h"}], ",", 
            RowBox[{"N", "@", "Tcmb"}], ",", "k"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Global`TFZeroBaryon", "[", 
           RowBox[{
            RowBox[{"N", "@", "omegaM"}], ",", 
            RowBox[{"N", "@", "h"}], ",", 
            RowBox[{"N", "@", "Tcmb"}], ",", "k"}], "]"}]}], "}"}]}], ";", 
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"krange", "=", 
        RowBox[{"10", "^", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "6."}], ",", "4.", ",", ".01"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"fitonek", "/@", "krange"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"horizon", "=", 
        RowBox[{"Global`TFSoundHorizon", "[", 
         RowBox[{
          RowBox[{"N", "@", "omegaM"}], ",", 
          RowBox[{"N", "@", "fBaryon"}], ",", 
          RowBox[{"N", "@", "h"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peak", "=", 
        RowBox[{"Global`TFkPeak", "[", 
         RowBox[{
          RowBox[{"N", "@", "omegaM"}], ",", 
          RowBox[{"N", "@", "fBaryon"}], ",", 
          RowBox[{"N", "@", "h"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"result", "\[Equal]", "$Failed"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"Interface", "::", "LinkBroken"}], ",", "\"\<tf\>\""}], 
           "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<soundhorizon\>\"", "]"}], "->", 
          "horizon"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<peak\>\"", "]"}], "->", "peak"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<kvalues\>\"", "]"}], "\[Rule]", 
          "krange"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<full\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<baryon\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<cdm\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<nowiggles\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Transfer", "[", "\"\<zerobaryons\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Halofit", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Halofit", "[", 
    RowBox[{
     RowBox[{"OmegaM_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaL_", "?", "NumericQ"}], ",", 
     RowBox[{"gammaShape_", "?", "NumericQ"}], ",", 
     RowBox[{"sigma8_", "?", "NumericQ"}], ",", 
     RowBox[{"ns_", "?", "NumericQ"}], ",", 
     RowBox[{"betaP_", "?", "NumericQ"}], ",", 
     RowBox[{"z0_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"link", ",", 
       RowBox[{"Tf", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Kappa", "=", 
        RowBox[{"{", "}"}]}], ",", "arange", ",", "krange", ",", "ellrange"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"arange", "=", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{".01", ",", ".9999", ",", ".04"}], "]"}], "~", "Join", "~", 
        RowBox[{"{", ".99999", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"krange", "=", 
       RowBox[{"10", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "3", ",", ".1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellrange", "=", 
       RowBox[{"10", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "6", ",", ".1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Global`HFSetParameters", "[", 
          RowBox[{
           RowBox[{"N", "@", "OmegaM"}], ",", 
           RowBox[{"N", "@", "OmegaL"}], ",", 
           RowBox[{"N", "@", "gammaShape"}], ",", 
           RowBox[{"N", "@", "sigma8"}], ",", 
           RowBox[{"N", "@", "ns"}], ",", 
           RowBox[{"N", "@", "betaP"}], ",", 
           RowBox[{"N", "@", "z0"}], ",", "i"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"Tf", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Global`HFGetPkNL", "[", 
              RowBox[{"a", ",", "k"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "arange"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "krange"}], "}"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"Kappa", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Global`HFGetKappa", "[", "ell", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ell", ",", "ellrange"}], "}"}]}], "]"}]}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"result", "\[Equal]", "$Failed"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Interface", "::", "LinkBroken"}], ",", 
           "\"\<Halofit\>\""}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Just", " ", "return", " ", "the", " ", "raw", " ", "numbers"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<avalues\>\"", "]"}], "\[Rule]", 
         "arange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<kvalues\>\"", "]"}], "\[Rule]", 
         "krange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<ellvalues\>\"", "]"}], "\[Rule]", 
         "ellrange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<kappaBBKS\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<tfBBKS\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<kappaPD96\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<tfPD96\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<kappaHalofit\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Halofit", "[", "\"\<tfHalofit\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["CosmicEmu", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CosmicEmu", "[", 
    RowBox[{
     RowBox[{"omegaM_", "?", "NumericQ"}], ",", 
     RowBox[{"omegaB_", "?", "NumericQ"}], ",", 
     RowBox[{"sigma8_", "?", "NumericQ"}], ",", 
     RowBox[{"ns_", "?", "NumericQ"}], ",", 
     RowBox[{"w_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "link", ",", "result", ",", "labels", ",", "limits", ",", "parameters", 
       ",", "check"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"labels", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(b\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(n\), \(s\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\)\>\"", ",", 
         "\"\<w\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"limits", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".12", ",", ".155"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".0214", ",", ".0235"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".85", ",", "1.05"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".61", ",", ".9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.3"}], ",", 
           RowBox[{"-", ".7"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "these", " ", "are", " ", "hard", " ", "limits", " ", "as", " ", 
         "given", " ", "by", " ", "the", " ", "authors", " ", "of", " ", 
         "the", " ", "cosmic", " ", "emulator"}], " ", "-", " ", 
        RowBox[{
        "the", " ", "program", " ", "will", " ", "crash", " ", "if", " ", 
         "any", " ", "parameter", " ", "is", " ", "outside", " ", "its", " ", 
         "bounds"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"parameters", "=", 
       RowBox[{"{", 
        RowBox[{"omegaM", ",", "omegaB", ",", "sigma8", ",", "ns", ",", "w"}],
         "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"check", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"parameters", ",", "limits"}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"check", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"Interface", "::", "OutsideBounds"}], ",", 
            RowBox[{"labels", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"parameters", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"limits", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"limits", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
            "\"\<CosmicEmu\>\""}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "check"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"And", "@@", "check"}]}], ",", 
        RowBox[{
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Transpose", "@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Length", "@", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "/", "2"}]}], "]"}]}], 
             ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"Global`CEGetPkNL", "[", 
           RowBox[{
            RowBox[{"N", "@", "omegaM"}], ",", 
            RowBox[{"N", "@", "omegaB"}], ",", 
            RowBox[{"N", "@", "sigma8"}], ",", 
            RowBox[{"N", "@", "ns"}], ",", 
            RowBox[{"N", "@", "w"}], ",", 
            RowBox[{
             RowBox[{"1", "/", "a"}], "-", "1"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", ".5", ",", "1.", ",", ".1"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "CosmicEmu", " ", "only", " ", "does", " ", "these", " ", "five", " ",
          "redshifts"}], ",", " ", 
        RowBox[{"everything", " ", "else", " ", "is", " ", "interpolated"}]}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"result", "\[Equal]", "$Failed"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"Interface", "::", "LinkBroken"}], ",", 
           "\"\<CosmicEmu\>\""}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Just", " ", "return", " ", "the", " ", "raw", " ", "numbers"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"CosmicEmu", "[", "\"\<zvalues\>\"", "]"}], "\[Rule]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "a"}], "-", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", ".5", ",", "1.", ",", ".1"}], "}"}]}], "]"}]}], 
        ",", 
        RowBox[{
         RowBox[{"CosmicEmu", "[", "\"\<pk\>\"", "]"}], "->", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"CosmicEmu", "[", "\"\<background\>\"", "]"}], "->", 
         RowBox[{"result", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{"End", "[", " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", " ", "]"}]}], "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Section"],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<interface.m\>\""}], 
   ")"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hfdata", "=", 
   RowBox[{"Halofit", "[", 
    RowBox[{
    ".25", ",", ".75", ",", ".5", ",", ".8", ",", ".9", ",", ".7", ",", 
     "1.5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"hfdata", "/.", 
  RowBox[{"Rule", "\[Rule]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"{", "#", "}"}], "]"}], "&"}], ")"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Halofit", "[", "\<\"avalues\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"kvalues\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"ellvalues\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"kappaBBKS\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"tfBBKS\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"kappaPD96\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"tfPD96\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"kappaHalofit\"\>", "]"}], ",", 
   RowBox[{"Halofit", "[", "\<\"tfHalofit\"\>", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"halofit", "[", "\"\<ellvalues\>\"", "]"}], "/.", "hfdata"}], 
      ",", 
      RowBox[{
       RowBox[{"halofit", "[", "\"\<kappaPD96\>\"", "]"}], "/.", "hfdata"}]}],
      "}"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"10", "^", 
       RowBox[{"-", "14"}]}], ",", 
      RowBox[{"10", "^", 
       RowBox[{"-", "7"}]}]}], "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cedata", "=", 
   RowBox[{"CosmicEmu", "[", 
    RowBox[{".15", ",", ".022", ",", ".9", ",", ".9", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"cosmicemu", "[", "\"\<pk\>\"", "]"}], "/.", "cedata"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tfdata", "=", 
   RowBox[{"Transfer", "[", 
    RowBox[{".15", ",", ".05", ",", "2.7", ",", ".7"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"tfdata", "/.", 
  RowBox[{"Rule", "\[Rule]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"{", "#", "}"}], "]"}], "&"}], ")"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"transfer", "[", "\"\<kvalues\>\"", "]"}], ",", 
       RowBox[{"transfer", "[", "\"\<full\>\"", "]"}]}], "}"}], "/.", 
     "tfdata"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cambdata", "=", 
   RowBox[{"CAMB", "[", 
    RowBox[{".2", ",", ".05", ",", ".75", ",", ".6817", ",", 
     RowBox[{"-", "1."}], ",", 
     RowBox[{"WantTransfer", "\[Rule]", "True"}], ",", 
     RowBox[{"DoLensing", "\[Rule]", "True"}], ",", 
     RowBox[{"NonLinear", "\[Rule]", "\"\<none\>\""}], ",", 
     RowBox[{"WantZstar", "\[Rule]", "False"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"cambdata", "/.", 
  RowBox[{"Rule", "\[Rule]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"{", "#", "}"}], "]"}], "&"}], ")"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CAMB", "[", "\<\"age\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"zstar\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"rstar\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"100thetastar\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"zdrag\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"rdrag\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"kD\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"100thetaD\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"zEQ\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"100thetaEQ\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"sigma8\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"CLscalar\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"CLvector\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"CLtensor\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"PSlinear1\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"PSnonlinear1\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"ints\"\>", "]"}], ",", 
   RowBox[{"CAMB", "[", "\<\"floats\"\>", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"CAMB", "[", "\"\<sigma8\>\"", "]"}], "/.", "cambdata"}], 
  ")"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0.6935615305830347`", "}"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ListLogLinearPlot", "[", 
       RowBox[{"plot", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"plot", ",", 
        RowBox[{
         RowBox[{"CAMB", "[", "\"\<CLscalar\>\"", "]"}], "/.", "cambdata"}]}],
        "}"}]}], "]"}], ",", "2"}], "]"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Rj6tjKD8bW3RQ+eNwurB9bMjTzFxN2yT39Q2CqKf7zSRZ5gYp+buuO79KJx2
W1g9fpaJK7bYF/94Pgpfw5P4T6OZODPSwlwsaxTKFsXs942l7tNntF++MgqG
6an0eXFMVO51K+2KGIXU5Wdk2uOZuNE97LuezyhkBTSb3zxP+VOBNn90O8Vv
8quLtlyk9LnFaWqzHIXd3S5HpROZqONlVzLfaBRk1b4cfXWZynfl82xp9VGg
/TIvOXqVie9/GyffkRiFDUVoOfc6Exd1bdcc4VD8b3+M9usG5b+P6p+bmvlQ
cClswYWbTAyK8t3YUMmHDwn8+FUpTEy5M83e8ZAPN5JCTIZvMXG+IIr4cI0P
Rqsy9NJTmfhS9YRVSDgfKjao7nG8y8QQ8WAFrwN8ePdiN1vsHhPDfHZ9W0vN
t55fNR8XpDORPSQr+syMD9dpf2pcM5lY47OKpjKLD6dJ1/kKWUz8mLL57E6q
Xr60VW55ns1EFT3G0+VDIxCRcPWHRy6Ft754Y+MfI9AXeUpf5SETryUmugyU
j8DSce9XLx5R5/selV7JHoERyb4MjzwmRpUeqHS+NAIWkud+KRZQ+Mi9+70j
eAQGbrbvK37CRPuQbF8j1xF4VnDGzLWQiYdkjzFrrUfgWJTIXqkiCu+9QbME
C0cAk/uaHxYz8eJEpqYVNU9fq6xPd3jOxNvTW04WTFH9j/aKirFSir9uOGd2
dQ5D+6zXi2+9ZOKpq9aqM+qH/3v/iomM16mrHZ4Mg7TfRsXO10zc8a0gq/Tm
MEybeJ+IqmDivfikPOYpqr+6+s18bhUTm3J/fLt+cBiS01hOb98wUb7ZKaLN
bhgyyl+8OVjDxIN/PxjZLB+GV3k2cTJvmVj3tNpDQnsY5kdtzMqqY6JcdV/o
OalheJFvo2ldz8QLUgumXDlD0DxV39/5nuIDg+ztu74NwfmLzsqnPjIx4TNy
ZpUNweU/IZe0Gql619tlB1S/6DCUd+j5J6oeqj/tPX5hCIZ+n7mz9Qv1/LwJ
g/agIdjkFGrE/crEz5+k4n1dh2DKkaZx7hvFz1/nR+itHwLHlc1uus0UXtoj
/b8YD8HOD+ukX/yg8PC5qq+ZGIJ3S7tlHH9RfO1p5bxUfAhkphcfHGih8Leq
Sz/hLw8YrLzZp9qYuHChYZ3CNx5cbGtZzWQzcYvk1/dq5Ty4pgyvHrZTfOOw
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
5a+wwWQH41hPB4EG8QdqwlPYMHP86btfnZR+J4UPPM6g5HNv9DR2EbjV41F3
wiNK/ra22upuKl5GjpHzKPzpLUj3Le0hcFtQrPmpCjb83Sv263EvxYcxyX9j
69mw/SNTIb2Pykdb73rbb2y4u1JY8kY/VV+Mi15otFP+3vG1Mm6AmieEuX33
qXx4XP3EOvwPgQqy/9fCmYdT9XVxHBFF5qTsY84QRWSsVbtUmjOLiNBASaUJ
ZUylEiJJA1FKIRWhQlQkQyrDHU333iMkIUVS736f5/fn57nn3LP3Xmt913f9
s3dp8yZ6QEa29HLwNzKfqZ67EinGgwcPJrN2D5H+O+LlypbjwdbJ9BC37ypY
rsXKSkDxwNHhsdKmYaI3yXG7HRbwIPerW+jyETIvNdACTQseDI0+umM8Suod
9ZW7rOZBdHjTFc0fZF4Ued6TTOo9MaF5s+IY6QfmXoFLvHhgMOdjg9hPoldW
Ig4d+3ngMdIv/4uw2H3rq0mhPDAesFT/8uv//VDa5f453n/3P6jgIv+c6Hep
PEj6x06smyD6OyZhvukuD4Tsd/8o+03mwaONx0yLeDBlkKD2YJLku/0jnffV
PHj756B8+h+ST/PXbpL9yANxSqcxbkoFt/zqtjjQxYOfn99tDflL/PLEzpyw
IR64ugSn7/2ngnld9YWX//IgpWZFvqsQwp1+8w/OkuZD85J159YKI5w/PY2R
RPFh5FaOgZkIwqY+L76rLST6/P3IVa1pCFufNTlasowPrdMa6+VEEVY9/0BN
cjMfeBnv3v0jLOZkO1zowYcroVGXBsUQfnzWaH/xfj48sZCj2NMRtrPxfeZz
kg8m/klH3okjrClzfcW+i3ywTVC5UiyBMENrDQ6+wYcg5brwrBkI32+BaSF5
fDi78+nihJkIr3EffaX+kg/M4tH8MEmEvy1T7UMNfDDcmj26Rwrh5vSK2yVs
PrQ7s0WcZiH8SGly/9QAHxq6itgrpBEuuPZr4+lJPhSMrQs3kEFYJm9/wd+Z
AuCcK+xXkkX44os7w2/mCSDmlKiGiBzCrULSW8IWCKDgrqfGIOGbRUp/3loJ
wKW6ZaBdHuGM1TPcptYJICgmOrJaAeGrqsbVIdsEMHk2ojNPEeFC7wuesXsE
oLyDL3F1NsI5J3adO3FMADIxdX8ilcjvZenx9rEC8PW1fREwB+EIj2t3i5IF
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
2B6T6dKYwlx5ExfvxVz4H+w7GLQ=
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{None, None},
       AxesOrigin->{3.2497185218556806`, 8.881195386633897*^-11},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       FrameTicks->{{Automatic, Automatic}, {{{2.302585092994046, 
            FormBox["10", TraditionalForm]}, {2.995732273553991, 
            FormBox["20", TraditionalForm]}, {3.912023005428146, 
            FormBox["50", TraditionalForm]}, {4.605170185988092, 
            FormBox["100", TraditionalForm]}, {5.298317366548036, 
            FormBox["200", TraditionalForm]}, {6.214608098422191, 
            FormBox["500", TraditionalForm]}, {6.907755278982137, 
            FormBox["1000", TraditionalForm]}, {7.600902459542082, 
            FormBox["2000", TraditionalForm]}, {8.517193191416238, 
            FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}, {{2.302585092994046, 
            FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
            FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
            FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
            FormBox["\"\"", TraditionalForm]}, {5.298317366548036, 
            FormBox["\"\"", TraditionalForm]}, {6.214608098422191, 
            FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
            FormBox["\"\"", TraditionalForm]}, {7.600902459542082, 
            FormBox["\"\"", TraditionalForm]}, {8.517193191416238, 
            FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}}},
       GridLines->{None, None},
       Method->{},
       PlotRange->{{3.2497185218556806`, 7.312553498102598}, {
        8.881195386633897*^-11, 8.416498917655693*^-10}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{{{2.302585092994046, 
           FormBox["10", TraditionalForm]}, {2.995732273553991, 
           FormBox["20", TraditionalForm]}, {3.912023005428146, 
           FormBox["50", TraditionalForm]}, {4.605170185988092, 
           FormBox["100", TraditionalForm]}, {5.298317366548036, 
           FormBox["200", TraditionalForm]}, {6.214608098422191, 
           FormBox["500", TraditionalForm]}, {6.907755278982137, 
           FormBox["1000", TraditionalForm]}, {7.600902459542082, 
           FormBox["2000", TraditionalForm]}, {8.517193191416238, 
           FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.703782474656201, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.991464547107982, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.396929655216146, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.551080335043404, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.684611727667927, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.802394763324311, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.006367567650246, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.294049640102028, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}}, Automatic}], {192., -119.58957682310464`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
VUc9/OF/uuVm8w==
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{None, None},
       AxesOrigin->{3.2497185218556806`, 5.981024972844429*^-16},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       FrameTicks->{{Automatic, Automatic}, {{{2.302585092994046, 
            FormBox["10", TraditionalForm]}, {2.995732273553991, 
            FormBox["20", TraditionalForm]}, {3.912023005428146, 
            FormBox["50", TraditionalForm]}, {4.605170185988092, 
            FormBox["100", TraditionalForm]}, {5.298317366548036, 
            FormBox["200", TraditionalForm]}, {6.214608098422191, 
            FormBox["500", TraditionalForm]}, {6.907755278982137, 
            FormBox["1000", TraditionalForm]}, {7.600902459542082, 
            FormBox["2000", TraditionalForm]}, {8.517193191416238, 
            FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}, {{2.302585092994046, 
            FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
            FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
            FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
            FormBox["\"\"", TraditionalForm]}, {5.298317366548036, 
            FormBox["\"\"", TraditionalForm]}, {6.214608098422191, 
            FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
            FormBox["\"\"", TraditionalForm]}, {7.600902459542082, 
            FormBox["\"\"", TraditionalForm]}, {8.517193191416238, 
            FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}}},
       GridLines->{None, None},
       Method->{},
       PlotRange->{{3.2497185218556806`, 7.312553498102598}, {
        5.981024972844429*^-16, 5.872715989482937*^-12}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{{{2.302585092994046, 
           FormBox["10", TraditionalForm]}, {2.995732273553991, 
           FormBox["20", TraditionalForm]}, {3.912023005428146, 
           FormBox["50", TraditionalForm]}, {4.605170185988092, 
           FormBox["100", TraditionalForm]}, {5.298317366548036, 
           FormBox["200", TraditionalForm]}, {6.214608098422191, 
           FormBox["500", TraditionalForm]}, {6.907755278982137, 
           FormBox["1000", TraditionalForm]}, {7.600902459542082, 
           FormBox["2000", TraditionalForm]}, {8.517193191416238, 
           FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.703782474656201, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.991464547107982, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.396929655216146, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.551080335043404, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.684611727667927, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.802394763324311, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.006367567650246, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.294049640102028, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}}, Automatic}], {576., -119.58957682310464`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
xg8nJwrYvtANzoyrRSOrjHvnXClwOtSWM9isFkUprlw86kEBoWOVZe07a5FX
3emFrd4UyPrZFNH7pwaRFdc7r71OgX17eRXt4mqQM81+6OsNChhovo0/vLkG
kSgKMr0BRDwYLQcuNlWjlNirjuXBFIjKUbvQerIafQ3hKQ8Oo0DnAcjeNFKF
opq+vzaNpIC2sPTH/TZV/z1fpUCT2pcTCnOV6PKg9E6+eApUVOxyUb1WiQQ8
txuOJlLAitlxT4K9Eil+mfCrSaGAVCXnyJ6wCiSfuK7ON50C4gYSqWp8FYj/
V9bUySwCf34VqYFR5Ui0fcMOyk0K6DfO0jnXlqPZeWvfsTwKXGJx0ckJL0OV
Q+vGSgopcN18b3A9Zxm6LLCgb19CgcFTXOSFG6XoS0P2u93lFBj1TPrYvlCC
vljVB/yspEBrIRd+7VCCDh5/AfU1FPirWCsa+KEY5W3MEnesJ/Jnu6ThPeNi
VGabTZW9RYE58w/f/Z8UIZLWxf0fb1NgI8viD4HDRehA5w2fnCYKbO4I3ril
uhCJ59p/0seEflZ7rSXXFSKXpOrrPK0UYJ0Jn3oUUYAunGyG5gcUCPK61mr+
Jx9xOvDJ23cS/js+f3/WIh8t3OY7I95N4LHq5XXj3jzk9ndLTc8jwh6Srcf4
vjzkKv8QufVS4PBQ/DH7m7koPPk4p+QzAk8dU1GbuHJRbjI3d9dzCkinc3py
vclBMX/M1O1fUmDXDKzXLc1Grq8LuoWHKTB9oWRqk0sW+tchGdnwmuCbdOdN
zw5lIvc6iQSDtxQwOn5hlcaZgW7RPr779Y4CSsXGN52epKEPbLfdE8YpILv8
jOt2QiqS5nlqtPMDBZy+rYQioxS0amsZ1v2JAnSZ3NPd4smoVayCy3yaAtEK
KcmjY4mopOLF8J8ZClzmP6ehUZiAfqbxrUR9J+av3pE+eCkedYh5eK3/SYFT
TRNNT7bFoe+7FTXrf1FA0P+Esdpw9H/P7ymgfkzSpNAkEmUJK6/pX6SAog55
L/v7MLQzvf77+WUKSOxuHMiyDkEvz70/OLVC8F3iRon56UBUpf76ozMrFX7+
eeE74uiPzlwsXfjLTgXOQTk3vtnraOKNrpP/GiqQqX6NdBYvFLT6RncNDxVq
v0fI1Iq5ooOGajfD+aiw4GGoKGp8FZ0siTDiE6CCDfPhimWcFapnyfeLFKLC
+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
3tv9Nwf/7/d5GmQlLav2HszBY91fhO0pNAjf235k2j0br5Sv23+ORoP7r7c/
FK3PwqW+mlfVGTTYlirepfolE2uLm93Zu46QL7xXMH1jJv4jcpC8XpJY/2Ot
zWajDFxa3hTGu4E4/3hc91RkOv70sVPo10YaPNFd20u9n4YZ4Yo1b6RoIHZP
XPnJt1T8W+SPVcdmGhzaev6zuEQqft49vKdiKw14j1xO2HQqBQs33KPFb6eB
HXX73jeeydiuyJvuLkuD4YDcQ+mFSfjY/u8KZ3fSICLr+hnVvkT8te/HFbSb
Bnlci3Osiwn4Z4Fxq+QeGhjQf1DGNyRgvTvLu1n30iBG8poY74l43DJZ0/Je
gQamj/5d8neKwz0v1ezb9hPjx9Su4d2xmCaYpJh7kAaKmSTZjuvROOGrzVZf
JRpkDIRNTPVE4utlyfvPIRpUzU+ccSNF4GKjKZv9yjR4tTauscssDLvOymER
FRrEr8wGs1eGYB71Qwpfj9BgCAxsvf4EYQ36i/6Hx2hQrM7H7X00EH/j6ki8
qUaDycq7GzbG+eOY9Jc+Huo0mOZPS6M338A5Kv0RWidoIHiN6wQ6ew07mvq2
SZ2iAZlIsiNLnljuUMH6v5o0UGGlC+/JdcOvyZxlT7VpsKaYtWyXhjOWFrc5
l3+aBmHgfTTvqz32tI894KZHAxM5yTt5Opfw0w1I5bgBIV+KyZxrM8MZx/e4
U8/QwNNs2b7RWx+Xfdw5/NmIBn5fqFubFQ7jZdafl+6cpcEYnWrcLaaActMP
bg41ocGBxwrt3IunUWDlA1EDUwLPXz8U/kwwRUhRQ26jGQ3Ud0+/mgywRpPH
wm58M6dBw6rAE4UKO/T4+cHVu5Y0WHlEzRF974hOzJLrgqxp8GvO6bDZuAu6
XjeUrHWJBhzPtT8ee+2OluTlqymXiXheWDqs2uWFEnLf/X1nS/jXpe6SdPm1
/94/oUGhTbD+G/8b6Ma6VfmrV2kQ7bN94/Rmf3Tn4asNex2J/Sd7OHeFBiDp
2Bdqi040CMprL1sZC0TDs7kF2IUGXdR17b/2BiOKz/cD/m40CNnpvVkvIAQt
DjhwHfOggX6LxtzT7lC0dPeZ4BovGrzYt/3gI+5wlMvZqtvlTYMPKtLOrSoR
aKl8+lnoNRr0zghY5rpEoiP3liOO+xLjo/eeGeVEIdOLef5r/Ah5c/IK1m3R
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
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{None, None},
       AxesOrigin->{3.2497185218556806`, -1.8339252691497924`*^-11},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       FrameTicks->{{Automatic, Automatic}, {{{2.302585092994046, 
            FormBox["10", TraditionalForm]}, {2.995732273553991, 
            FormBox["20", TraditionalForm]}, {3.912023005428146, 
            FormBox["50", TraditionalForm]}, {4.605170185988092, 
            FormBox["100", TraditionalForm]}, {5.298317366548036, 
            FormBox["200", TraditionalForm]}, {6.214608098422191, 
            FormBox["500", TraditionalForm]}, {6.907755278982137, 
            FormBox["1000", TraditionalForm]}, {7.600902459542082, 
            FormBox["2000", TraditionalForm]}, {8.517193191416238, 
            FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}, {{2.302585092994046, 
            FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
            FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
            FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
            FormBox["\"\"", TraditionalForm]}, {5.298317366548036, 
            FormBox["\"\"", TraditionalForm]}, {6.214608098422191, 
            FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
            FormBox["\"\"", TraditionalForm]}, {7.600902459542082, 
            FormBox["\"\"", TraditionalForm]}, {8.517193191416238, 
            FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}}},
       GridLines->{None, None},
       Method->{},
       PlotRange->{{3.2497185218556806`, 
        7.312553498102598}, {-1.8339252691497924`*^-11, 
        1.8015433182772387`*^-11}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{{{2.302585092994046, 
           FormBox["10", TraditionalForm]}, {2.995732273553991, 
           FormBox["20", TraditionalForm]}, {3.912023005428146, 
           FormBox["50", TraditionalForm]}, {4.605170185988092, 
           FormBox["100", TraditionalForm]}, {5.298317366548036, 
           FormBox["200", TraditionalForm]}, {6.214608098422191, 
           FormBox["500", TraditionalForm]}, {6.907755278982137, 
           FormBox["1000", TraditionalForm]}, {7.600902459542082, 
           FormBox["2000", TraditionalForm]}, {8.517193191416238, 
           FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.703782474656201, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.991464547107982, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.396929655216146, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.551080335043404, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.684611727667927, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.802394763324311, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.006367567650246, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.294049640102028, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}}, Automatic}], {192., -358.76873046931394`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw0W3c8V+/7pshK5nsLRSo0pCJyuxsoDXvvvbN32bLJCtl7NIRCVmZRISRS
aUhJWyWV+J3v6/X5+cfreT3nnOe+r/u6rvs5533OJmt3bbs1TExMT1mZmP73
////NopNtBiHhsOXA39WDu98q/x5WTlyeDYeuNZeDZpP/6Y8cmUTt09O6n/z
i8qHHWoaNitngmzSp1+HOn8rmzEHwJhXNqwRlfzDdXlZWUkv7FWuSi4YGO+5
5rV5VVl3e4K2VV8+eF9WVK4vYcJ5Oya7HSuF/12fGV/f7RAQWy4Cst7N1jqX
NajwXeCv7HQxnJQLbZrZuRbXnb/RH1RVAucKxtrIr9ZiOnzeWGlWClqJMlIs
0Sy4o9Sw4slqKVS2TpDvCbHipisbNXlSy0Dk2KkD5BpWFNzS2S0uUP5f/OuQ
vFUiwTemHIJC/3S51KzDpILkLwe/lMP5VBeFYBE2fOsvv7/xRAVIN7Cs25/M
htGF1uVCBRWQOuMdfPgXG4rJrjFIfFcBddfcM3aasGMVabahbFsl9Pcp+fu0
sONJk5SlWatK+Now8u8ciQNVqdFWD9Mr4bd02tlKVw4cslSXetNR+R9+HEg7
bpNWPFMJg/Sv8xm8nGg5qzMWu6YKLkStbX5hxolPjxdJ0oWqQEz94mPjKk68
Hf/g0fjuKhBZGbwv/5UTj7SZbjh4qApyH3P9rtjHhVl6rFs7T1WBsVTqsaEA
Luw2OtharF8FLv3NHWO3uPDOzqogAdMqGGke/zG5xIVlCl8Ej5lXwSL3rfDl
fevReKbpgJdZFfR959Ex9lyP88lV2b1GVf/Vdz3qljq88tSpgva7Cp+3zazH
7PO5PVfUq6DqUE/fHRo33iyY/1ypXAWPuWMdf5/mxlqtv/wX91QBt9cexbEI
brSvcbpbLlYFp68kq9jd5MZTalVHfvJXwQ6lnbq333JjvYtIZQFTFfB9FCR/
JW/Aj8ZyfG0fK+GI7vJ+VtUNqGFoWOwwUQllA6V+XD4bULpy3q+1sxJcD19o
31C8AR/F69eNVFVC49cLu+iDG7BIlcWjN6USfFs1D8ovbcDnG01Hr/pW/sdP
Hnylc+dXpXEl1DKuNI2e4MH18ewV96ASVpm0Vi19ePD7E7OD4psr4Xj1tZot
eTwo22re2clSCZcPbnbc1sODnuWlclfeVsB6gW5/j/c8eIq3r3LhbgV8X2kx
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
5Jptz77Zi3D8v0iLIy0MYKzfXrXjO4mPubfe+zkDUirKKlX7iP6wZyLcChjw
ovl4Vi/hVfu6Xd3SGZD48r5rXj/CB9b+xt6xDIBPOwa9fxA/+bd37eEDDKhl
3d6sOED0cO0J1UvbGPBMKyH/C+GNNil81Q4M2PhUrDVzkPi/G031f0wZECPs
+NnjJ1nPUp4AujoDumiOz2WHEN45PPw2fhkDqh1XRLYTtrq74c9XHgZYudVT
54fJfiDwTxvzNx3wOp9Lzr+I3p/J3VTUSYdNRr9HREZIvDFih1Tr6bDwJ0ql
gfCdx/zKN5/QISxBxSjhN9lvXLRbZ3CDDqMve1WsRhFOS86eqEulw+YzTb95
xsj9S2p5AqPokFUymv6cMOfIyb3SQXQ4sXSTYtg4wi+YV7QattDh9RbRE7QJ
0h+trasTbemAtqu8nCBckjm0041GB+XOvJ57k2Se8eU3a6rRIeJoxtfdU2T/
FPFmk6AUHTr6pUrVp8n+MJiaHOWmw486hX29hHnst6T3jpjBtvJa3pwZhKlQ
B5NvnWYgtUXu8OZZop9+xa/6681gQF+pVvoPwv99vAQzpWbQW/9z4u2f/58P
UtkSt8xAM/8k15k54udOxowapZnBYqu5Ac5fsl//YsHwO2EGQ9Lu93nmid/I
K0nICjaDuIQ7bmWEg/0MvnzdZgYPeRc+Hv5H9KpYnqXtZAaxP7zM9BfIPFZo
eBbNMIONSZ+ODhFm0nJde7TMoNL62KUbXBRenTQn6bjcDPJ9Hc9v46ZwxH3D
hSoBMzBX2bZ3OQ+FvfSLVrCmTUGg7plaK+HfOVWh9d9NoTthX9mZRRTefKZZ
xqvVFHgvxelzeClcGWfINV9lCktWiMRyLaawo6KT6fX7pjBpLvaklPDK/qNv
NuaYgo58xqtgPgrv2C1dKZVsCqk1jx9r8VPYHEegjuOmsH/9wZO9hN+NSfQX
7jaFc6++6GUJUNhSSkf91GZTMNPmKnMVpHD5Wr3+fbamYHT0u5qIEIW39x7S
8jExhXe3MoJqCG9+6PnXU90Uft3Uuhi+hMI1emzv7TKmML7tWpaRMIXfjpzw
PshnCj2PxGJ+Eb5yPJI3ZdIEPGLDODeWUnh9YKrz414TSLk+PugpQmEpG/l1
P96ZgF9v1J5lohRecvMgv8oLE3AXNmhqIOyxjCti1wMTyOqSEDshRmENFdny
/66agMSK1bpm4hTO9JVvkEkxAftjZ3TGCH/09b8XHmkCGbfMRfIlKMxX4h78
O8gEhNY5NXhJUti230luj5cJBCx7FSAtReG6UzcLJhxNwCmtpK+B8G2dcoM4
MAFq10p2zDIKi+8YLVFZYwKLlKkIE2kKq5VfMX1DmYCATVHGCGHhVyvrIpcS
3t594boMhQclv+w0n6dBxWj1vs2yFO7T01ISHKbB613eWuJy5PkHO2c7O2j/
O9+Xwk0qEzNlDTSo7Z40D1tOYYHlWqvyn9Egopg3Q0+ewuNKgaezC2hAycy9
6yP8X4P46quZNOjd3jt8GVE4+naYZFEiDSTH6vvXURQOshO0qgmjQb9wWeXi
FRSWq9CtHNhNg6vzVceeEv66/JOrrCcNTvENLAtSoPC5X/yvnR1oMO1renal
IoW5G5/1XGDQwNG+avA94Xm7uZ29q2kg8Pu0aqIShd3mXiowVtDgUWguxsrk
fXsVGrNFyHURcfoEYT8TIVPhBWNorO+WubWSwqXD8RrRI8YwV6/culmFwndX
XPHh7jKGu0od+0RVKSzhZX8nodkYDD7J/aoi/IiZVre80hgWzffZHVKjcIB7
eEzxfWNoOe14SmMVhRdo/NluucaQEL05v4OwxQGDbq5UY3B+L5ufrE7W4/Ji
yYcxxnD+aEoCS4PCq9iR07tDjIFrY7PtJGGff9dd1/gZQ5Jz19BNTQqneIWO
T7kawwmbhiAPLQqfnP2bVmNlDKGy2e+EtSks5GXAl2VsDB7nfGWfE55UVuA/
qm4MgSdVYP9qUr8fqrw85Yxh/dMhi5VrKEwTV2q3EjIG8Yka7TbCut50XaM5
I5D4XTYZq0PhZg+ZtVpDRqC+oyObpkvh72eLb6p2GkGKwGqtQcI4TdpZtdEI
/sY8vXhZj8L3582nNJ4bQXJE8nd7fQov9TDwNLhnBN8zH0n9I7wCxu2YV41A
9oip6l0DCj+hR8e7nDOC5zdVZbatpfCdH90fAmKMYOZZ9KCYIenXVplFJ0KM
wJ+9JbuS8KfUlW+u+hmBWeUzw2AjCj99IjBf5WYE+o+LCpWNKWzQXrepn2ME
V3Lo/O8IS0cE3BAxIc+P72PF0ChsbDV4h6ZpBGKKbl4GJhTeVu6o4ydvBE9S
pjx7CO84mj6VKmwESkVbINWU1OPSN7XV84ZQ3HaOi21GYWvBoZ3Tvwwhyjfv
2hjhGu7ZbK0uQ7AsvKSZSyd6mTCl7/3WEPYsOn7OmUHhfv3+/otVhoDue3Rw
AdHblDcnmh4agvZfM4F7hLmNC5r4rxuCjqqWtJc5ie/xySScZgjH/PX5RDCF
M65tiQuNM4T/A+xOyLY=
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{None, None},
       AxesOrigin->{3.2497185218556806`, 5.012657058349282*^-9},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       FrameTicks->{{Automatic, Automatic}, {{{2.302585092994046, 
            FormBox["10", TraditionalForm]}, {2.995732273553991, 
            FormBox["20", TraditionalForm]}, {3.912023005428146, 
            FormBox["50", TraditionalForm]}, {4.605170185988092, 
            FormBox["100", TraditionalForm]}, {5.298317366548036, 
            FormBox["200", TraditionalForm]}, {6.214608098422191, 
            FormBox["500", TraditionalForm]}, {6.907755278982137, 
            FormBox["1000", TraditionalForm]}, {7.600902459542082, 
            FormBox["2000", TraditionalForm]}, {8.517193191416238, 
            FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}, {{2.302585092994046, 
            FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
            FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
            FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
            FormBox["\"\"", TraditionalForm]}, {5.298317366548036, 
            FormBox["\"\"", TraditionalForm]}, {6.214608098422191, 
            FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
            FormBox["\"\"", TraditionalForm]}, {7.600902459542082, 
            FormBox["\"\"", TraditionalForm]}, {8.517193191416238, 
            FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}}},
       GridLines->{None, None},
       Method->{},
       PlotRange->{{3.2497185218556806`, 7.312553498102598}, {
        5.012657058349282*^-9, 7.262315565528051*^-7}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{{{2.302585092994046, 
           FormBox["10", TraditionalForm]}, {2.995732273553991, 
           FormBox["20", TraditionalForm]}, {3.912023005428146, 
           FormBox["50", TraditionalForm]}, {4.605170185988092, 
           FormBox["100", TraditionalForm]}, {5.298317366548036, 
           FormBox["200", TraditionalForm]}, {6.214608098422191, 
           FormBox["500", TraditionalForm]}, {6.907755278982137, 
           FormBox["1000", TraditionalForm]}, {7.600902459542082, 
           FormBox["2000", TraditionalForm]}, {8.517193191416238, 
           FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.703782474656201, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.991464547107982, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.396929655216146, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.551080335043404, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.684611727667927, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.802394763324311, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.006367567650246, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.294049640102028, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}}, Automatic}], {576., -358.76873046931394`}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw0e3c8l+/3v5m9eU20qEiLSqrr5UiKSiWjhSQqSckMEVIoe5PsvWWP2957
FCIjO6nskPjdv8f78/WPx/W47td1nXOez/M857rHTv2n1wwZ6OjoBpjp6P7/
///7k74rpVlYJkP7Lbe+eebgpDyXidZTdgVZGgdjuu2M/7y89r6qpUdtJ/43
vyK/21+17Ms1OZqM588/ChVr8i5T4iOxSnI0hh2S6xypG/KdI67PUmZP0K7f
ks4w27UlP3CF8xjv/RM089RT8h9j6ICZ5qpwqeL/1qeHey0vDumzytIImnkl
2cYMIKBWuU388nHaJdmXBWMHGcFdtfp9R9gxmn1EdynhGyP8WM6uyVo8SlPz
OLKf6TUTsGj+FKBpHaUllvQSmoSZQS3124UNTIa2XVlVjpDCDOWBdKF6e//P
v21wanfnRLyfNM325Xqlcco2OFw+/GaVTpr2xtf4pN12FmD/XNjpYn6EJpXD
tO24FwtId0xTrX8cpvmOmdud+cMC3d4pRwuNDtOyM54GHLzNCpIuE7FKXw/R
GmqRtUUxK5TwNZ4LnztIm8vp/GcvxAZSnOeyY3gO0tak/F4kPmYD5YKYM64n
DvwvfmwwpCV+6/kjKVorZW4mgJcdSg4KXo+L20/zcWEsHNZhhyznvBC5SUna
7gtBPbeS2ME96IrD/YOStO2brc0n5tiBkLHvwc0XErT3PRxrCcc44K6DUpdh
+z7arf2+ym3POcDYKQ4z37uPZtxQWNZdxAEmMQznfVz20joLPy/1rXJAcouw
R8PkHtoKV5HTxjFOuP4jM0Xi8h5a7SKP+q1nnJD3/XlFRbH4//DlhK2PR3+E
SYnTsPqTv/aNcYK5dJRybawYLUmhuraOzAUX1Z+vXNohRuvhcnu4dpkLauls
+eVjdtO4zKRPdTtzwfvZsPkgid20y2leSoZ5XPB8NKeWNX8X7QA6qFE+yQWu
Fj1/jp/fReObFSTMEbhh4ajgfPXXnTRFjY3jzOe4YTTPgXLNaictrjHWisOC
G5zc9w6+EthJe3zGB+OO5oZVhR0xf3N20PLnfA5RWrnB/Jlt1+3rO2iWJVdP
n1jlBmkN7wzP9e3/4ycP7N+Qlim7sJ2WSU0r6LrIAxJGWrdzIkRpW3RqW3oW
PBDUiSU9XhGhqSRnpIiH88DUZ8dF7msitNTTux7uq+YBT0KBQHm2MI1ToMra
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
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{None, None},
       AxesOrigin->{3.2497185218556806`, -1.5176989200387175`*^-11},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       FrameTicks->{{Automatic, Automatic}, {{{2.302585092994046, 
            FormBox["10", TraditionalForm]}, {2.995732273553991, 
            FormBox["20", TraditionalForm]}, {3.912023005428146, 
            FormBox["50", TraditionalForm]}, {4.605170185988092, 
            FormBox["100", TraditionalForm]}, {5.298317366548036, 
            FormBox["200", TraditionalForm]}, {6.214608098422191, 
            FormBox["500", TraditionalForm]}, {6.907755278982137, 
            FormBox["1000", TraditionalForm]}, {7.600902459542082, 
            FormBox["2000", TraditionalForm]}, {8.517193191416238, 
            FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}, {{2.302585092994046, 
            FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
            FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
            FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
            FormBox["\"\"", TraditionalForm]}, {5.298317366548036, 
            FormBox["\"\"", TraditionalForm]}, {6.214608098422191, 
            FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
            FormBox["\"\"", TraditionalForm]}, {7.600902459542082, 
            FormBox["\"\"", TraditionalForm]}, {8.517193191416238, 
            FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}}},
       GridLines->{None, None},
       Method->{},
       PlotRange->{{3.2497185218556806`, 
        7.312553498102598}, {-1.5176989200387175`*^-11, 5.89611823674544*^-9}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{{{2.302585092994046, 
           FormBox["10", TraditionalForm]}, {2.995732273553991, 
           FormBox["20", TraditionalForm]}, {3.912023005428146, 
           FormBox["50", TraditionalForm]}, {4.605170185988092, 
           FormBox["100", TraditionalForm]}, {5.298317366548036, 
           FormBox["200", TraditionalForm]}, {6.214608098422191, 
           FormBox["500", TraditionalForm]}, {6.907755278982137, 
           FormBox["1000", TraditionalForm]}, {7.600902459542082, 
           FormBox["2000", TraditionalForm]}, {8.517193191416238, 
           FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.703782474656201, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.991464547107982, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.396929655216146, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.551080335043404, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.684611727667927, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.802394763324311, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.006367567650246, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.294049640102028, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}}, Automatic}], {192., -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499622}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Wg==
           "]]}}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesLabel->{None, None},
       AxesOrigin->{3.2497185218556806`, -3.129545182407582*^-11},
       CoordinatesToolOptions:>{"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Part[#, 2]}& )},
       FrameTicks->{{Automatic, Automatic}, {{{2.302585092994046, 
            FormBox["10", TraditionalForm]}, {2.995732273553991, 
            FormBox["20", TraditionalForm]}, {3.912023005428146, 
            FormBox["50", TraditionalForm]}, {4.605170185988092, 
            FormBox["100", TraditionalForm]}, {5.298317366548036, 
            FormBox["200", TraditionalForm]}, {6.214608098422191, 
            FormBox["500", TraditionalForm]}, {6.907755278982137, 
            FormBox["1000", TraditionalForm]}, {7.600902459542082, 
            FormBox["2000", TraditionalForm]}, {8.517193191416238, 
            FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}, {{2.302585092994046, 
            FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
            FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
            FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
            FormBox["\"\"", TraditionalForm]}, {5.298317366548036, 
            FormBox["\"\"", TraditionalForm]}, {6.214608098422191, 
            FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
            FormBox["\"\"", TraditionalForm]}, {7.600902459542082, 
            FormBox["\"\"", TraditionalForm]}, {8.517193191416238, 
            FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {3.6888794541139363`, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.0943445622221, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.248495242049359, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.382026634673881, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {4.499809670330265, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.703782474656201, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {5.991464547107982, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.396929655216146, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.551080335043404, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.684611727667927, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {6.802394763324311, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.006367567650246, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}, {8.294049640102028, 
            FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
             Thickness[0.001]}}}}},
       GridLines->{None, None},
       Method->{},
       PlotRange->{{3.2497185218556806`, 
        7.312553498102598}, {-3.129545182407582*^-11, 6.492135805765179*^-12}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], {
          Scaled[0.02], 
          Scaled[0.02]}},
       Ticks->{{{2.302585092994046, 
           FormBox["10", TraditionalForm]}, {2.995732273553991, 
           FormBox["20", TraditionalForm]}, {3.912023005428146, 
           FormBox["50", TraditionalForm]}, {4.605170185988092, 
           FormBox["100", TraditionalForm]}, {5.298317366548036, 
           FormBox["200", TraditionalForm]}, {6.214608098422191, 
           FormBox["500", TraditionalForm]}, {6.907755278982137, 
           FormBox["1000", TraditionalForm]}, {7.600902459542082, 
           FormBox["2000", TraditionalForm]}, {8.517193191416238, 
           FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {3.6888794541139363`, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.0943445622221, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.248495242049359, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.382026634673881, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {4.499809670330265, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.703782474656201, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {5.991464547107982, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.396929655216146, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.551080335043404, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.684611727667927, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {6.802394763324311, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.006367567650246, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}, {8.294049640102028, 
           FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
            Thickness[0.001]}}}, Automatic}], {576., -597.9478841155233}, 
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499622}]}}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
eJztnQecFEXWwEdmdwEDhlPP77w7PL0777vseZ6enggYEBURkaCCRAmKigRR
QbIZwSw5LznnnDNIliRhQRAQEJCc5Ot/1avu3qF6NkzPwnc/98cu0zXd1VWv
Xr38XpWq1qjOsy9Ua1S3RrUbSjSoVr9O3RoNb3jgpQZOU/SiSOSiOs5v2Rsi
fD4biZg/Z51/Z+vyh5ZwPt/Nf1G6j/IpH58uddvyuW3etwX4lBL07eWW/rxP
+eP27H2apQdXVP2n7tcN5kFfG78Xq78pmdostwY9nqb+pmZqC7o/qI/Ls3Ff
0LOpuR9+UJfT8xSA+RN7/CfY/bfBzqMq+ezvuDSxWRdIYIgx1M3Z/TGDCBpM
ckFWRPr3fxXvsYL8zZfQNLL9SFA3l+VgzEF9pOR2HtmBZwyrucyyemfPYT4F
LW3epyss/cYwxyzfcA6jO4c7p7lviRlX4JvVkgay5Ust/cV8ygZb1rQq8hcL
1Ndlc3USJHfREDDu0hxt1njvShhXU4IBWkP9veSX3313uOT8+d+80i99WYse
3Ze807njwjc7d174anr6sjojRqwpPXvWlj9v2bzv17t3HRLoFLxpx44Dt2zY
sOfBhQu+eWrSpA3PTBi//qkpkzfctm7tnju++mp3oSOHT0aeyZsFS0ns8Qtv
rf7If2354qmfIBgatl9pafuZpe0q9fdm0/bzffuO3rdk8fZy06dtGv1qkwkf
ffzR3DXPVBq4slqVwQceKtnjxH3Fu5wpWqTzDyVLdN//cMketO959JFekxo2
GDvjxRdGjXul8bhPP+ww5+OPPpzbulvXxTVHj15ba9TItS8MHbK64cD+K14Y
NmRV8549lvC6fq1bTp3QuOHYafVfHD3zhedHjm/caFx/p+3jjzrMaTBw4MpH
587JuG7fviORSyzjrsnfeAJRwcRWOTVHq2yRJLIvEF3oKFJI/b38oh9/PHvP
8mXflp82bVOHTz+Zxy3bypVNP3lvsS67H3u095A3mk2a91zdEY3791veJD19
eal5czJu+XrDnqsPHDiW7Xc9myVELJpmboW2kEB8cQ7GHDyU5Cy56vc21XBJ
9MyZH4svXbKjx9tvTR/x+msT2bcs3rBmTSe+lt53Wcvu3Zf85ttvf2ChI19k
xmHVj00xO3uOTJNmafM+XWbp1/vWRprj9RZHfrpF/S3ws4MHj3X45ON5Q99o
OokJr6v09IDFtZ4dBhZfv+e7w2djgfU31ZD/F3v2HK46ftz6yQ1eHnPwoQd7
rKpaZXCT9L7LER+0RBlnZ/1ZL+R/Vq7Y2fvNttNOF7unM/1AVAseP37qc/dl
Lwb38b+6j0JHjpx4ccjgVctqVB+yvtJTAxoOGLDi599/f1Stz8s8cJEgQ4qL
FPKjcSN/LDBv2LJlS4f69es7y/yjwZ/G77333p1z5871tkXMEl3lfvqDHte1
zhhaOuLToQcf6A4TKLFo4TcgTpeYDRmfquqroJ0Zb0tlSdgVzbK0xWq68Ydl
H0JcCeKcZk0/4xnKyg8cOPD9Ro0asST1O3To8HL79u2zqxkHzfN3ums2dKd2
78/aV+rhnp9+2H7O77dtOxDp7q6w7cnstl2bzfsuDZ6/3r/Rp9LT0yeUKFHi
lXfffVdgkv15K2T7rZ7tXzZt3Le8RrUhzLZN1y6Lr9m//1ikp+XJF7IaU0rt
jh07DitTpkybZs2asS4JLsdv9AB//v2+o591aD8b2QlZSTHH3rH0IA6qVO/W
rVur5s2bc/Vs586d32jdunVOUMWjzvkt3xbWL0k5ffpMowH9V3xXulSv9g6r
V6PsGwxG2SzmR3qG0LRt2rSpn9A899lnn2UmND5acc4ELra8MsXF3V/r679t
/Hov1HFiowZjf/fNNwf6ZQeaV1hemHkw0ceGDx/OKDQo1d/o8fz58/soRCRi
JR2/1J3Db8c2eWU8yFh54oQNDWhO8b3BfUi3RQxhieaKRNu2o6zPb+3gtY39
en3rb7dvP7igTu3hkPa/f71hb6PgzZupTQh3ogTtZ7FrGG8G6r5f6Bfnc2D+
8qCBK2H1zw8btlrJMvX0G+6bPHmyu6BR/Xy9Tz75xI8A6gU2FhFNjFLlaEIx
z16nb/31rl2Hpr/04ui5z9cdwfK8GkgkbCNPhJ7ZBHXBrN+58/IIi4z3qcmT
v0YvQB9gWV4PQhffPkqYvMX4w6LuplKfZNA2cesa/Y6Ljx07hXy8tvLTAyEs
r2V/maLe3g2f6gWb7qzLYpvh1fpt9365ZMfGJyv27/LeuzOZbdPMK6ieKWQZ
2NksqWNqJupoNlNK0MjPEYBVgx5l9JF5c7c6PLJn93femhHpnzhAfGQ3RIHY
qlCnQHNe69tn2TdPPN739jVf7W5Nc+gDsBlFAoHih7WPWfO/JnbhiKDqNQKF
AidOnO7XutXURbWfHeYoU0faBu3WxN+d3313jPU+KykgDPHT2paCmoiamd6m
1VRUvmb61myzoIKJjczGwXK4Y/JONBZqc+v6dXt2lC3T5/U+vZeyhd5OygDO
YcQ2EITEjGJkbfWl9phFy86csRnp+rHZs7ZE3kveEAL5YYAgf06nIlEkUZa3
aotRhDgIKMJn5B17l0kdW+B28UsSMYrPVZbuz4alVYj1Da0Cq/yqqs8M/tXu
3Yfec9+Qu7fnkGvnXMHwmw7TTp48M6BViykzX6w36soffjg+IieAz6X4LB5k
DIFTGtQfM+q1VydAkUcm49V+l3Whw4dPbHyyQv8ltWoORaF+J/NWDFv9u9j9
FMMEsyW4W/WIlMudKcyvW2c4hqPomdM/2giV7fGQtMAccbGs7KkCC6aEYotN
ONJat513xTCOEO9fR3YM4tQ7nToujHyQzbUISf3LzDINliVRmBa4XnXw4PEv
n60x9G3m3D7ovjxRIe2rFEd+CE+mjgEGnlUNjMAdfH60UT9vtAEmLbHNcrkd
57DyYgHEHxH50PKcZwHIE802W0bSggnvy8sFpL423OVfVak8qHnPHl9OysnC
nUeJOBLF2PJqet9l6pZcD/u8yK7qVvyI6yrpOcT4TUMikDlk7nkglmJCwhcZ
6RS4zc8f/w8Q0WTD3rhjx0EXNkIu8koxj8PuAwYtuxG/XUb5cunq6y6WXpKg
GgeMSJ7934yM/WhoVcaPX6/F187BqJDHTNmTbkX8+fbxx/pgkDbv6JyZEJ1X
RvlH3d8TM6Zv8vdnW+Tcua1CMcxOy8n04olKQRgemuQ4NbdkI9miXEybxyrC
lKVzyCpSfXsgcTe8DWdDgmCumcG53YuCHrIZs4Nus3CSaCZOEuzcTwZX8YUF
yf9idE+GKBfMAELlSx6y57l10tuzBcIBo18OdldK3xyxuC5tJOpyy9vOJije
uV90DMbWsKBuj7ESZnHZkSMn/e0v6Q9ZGuE6uZC7MlfgicczM6lcRBo0693r
y0uPHj2p+iyp3+copUcX1Kk9bFGtZ4ddeejQ8d9kPfBs87EC/rabt23d36dt
m2mIOAqox46dknQk3Ch4IFFM5jz/3MiGA/qvwC+nU6NS2n3+2fzVVZ4ZtNAZ
5pJnaw7NxhADRYGAcLk/bdn8vUblyKWY3EoumL8NR0+puXMy3ndev7X8E+nE
mBBlhK9sYsMGY5dXrzYERfY/ehI37Nx56Nj993alyQHyqV2Ple79/PChX92g
BxbfkDklKxRM8QCKXvBGr55fTmjUcCzg4H+umYPQgqa9ey1luJc4MI7cpTcw
wJ1W/6XRplcc7KeKF+1y47ffHpSAKqtBcmocvPRgLW5eYhLw2KurO3UbcflF
ly3d4UOMqAPTBQRd4CWQACmfDDfb/ZQS+wLQF53uofnztwpFSSXlhaB+gv2J
PcX+KHGF0XrDhqw68NCDPVSAjVCllNOnf1xevergQS2aTxY/Tiq68TdPlE3/
sWiRTkBlWNPXJxr6WGbmzIy1lSsNnNSgwdiCJ46fSjE0LpJ88+JMOzrY6KtA
iLQINLArDh06IW68/KAzbrynJ036+iYHfQa0bDEFty+2f9lH0XFNGo9v3L/f
CnmhaiNpiMjZv23cuE+oYP4mffsuA0Lbn3g8/a8bN+79rEP7OSed62U1qw81
xoSCJ06cwr4DNI88cF+308WLdiaE+66VK3cZ/pHHUmw8QKo7xaFHEGrPt9+c
7gdp8S+/3MF2/teaNbvNuLlvcPM3JqsrHdOWHyQqNXduRrNevZYClsW1nx22
qHatYSBmJB/h1ZG07x95qGf/Vi2n/GXzxu8//OSjuSwL7iahCqzMhqefHCDb
XbURZHKqeLEuHT94b5a8/pJbNqzfe8KB6JES93fbVq5sXwe6nY/fV7xL9bFj
VEZe2qmTp9F62XzxIB6GpdOX0JgtRL3U28qY1KqNG7tOOk8rvGvXoU8dyEFv
GTpBWXACeTeR6gCMBTE4CvDwNtQbNnS1sXY5j5x6xFmIBxcu2MZrdPN1EIF/
rV2zu2WPbktqjRq5plW3botf69tnKVR95OuvTpj3XJ0Rhx2AHnVQFuqE+4+A
/I7OWjPKBxYt+gbi4pDVk3jECbaH5G8v+3hfrkU/YVd957Bb4ujNGjojHN7X
4X6+3ZV6447tBx12N2J72TJ9SSpKPX3qjJlVfmfSLsAuymr9wtYR4m0Wtdra
Pl2IOFawrNu778zA2QutmF3v+ZHYXGCfwx0q+vVTFfvXGTniq1bduy2Bbjw6
Z3aGYB2cjOVkWWVsP+OxnWVK93GIcV8yrohKhbg7S769yPLl38LCMiqU67e5
Yvn+myuU78c+dPbYcDJFEC96vfXmdAAP6TKxpl3fe2fmEofc+TH+xm93HGRH
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
o6e4dCNxmUnMBzBn4lVUxoDzQ/AZ2qqqHCcTIEqMcGBOdIORj23SeDxooOI1
5LSKDAt8vU0duZy9SgIfXhOiVPDf4sXApU4Qdu83204jLOXo/fd1Q8jmpCuC
DVSE2stZvMMBYAw0iD+F2RLPjWAFDyLClDgQwIqdxZwgsdm+et6ubem7T932
lm5Qt15AhfsvhM8qPjaamaR7dZK9LZPdwwMKWfqLYRaBPcdWO46ciUGgIPqT
YN3TMA4PiCXeOXk2gQK2QV2m5ikAEyzge2HCrtgFuTPK/7SiuV7R2MJoSYLd
fyE5eSwzdp7b+SWJgSyRwyBi9mTOCjX/v0e2/66NWiYHW8fFG58kfT5O0Lg0
hO0eze084s/tJyTMTZcKCWNYse2wm7PnMOf4B3xcbuk35lytLN9wjohcLHOn
P1HmOOPRwcdSruUnIpPwoPzwvOD3i60q7ut6Air1Tif8qe/5pK5SdJvJ2FG/
DX3PRKIqRc38NOOPHDfxD8vrxlnatCnpCrJezWvVS50f8hF/u337gXLTp28i
g4J6UNhIMPeQcEJkOfF7w5u+NjGfKtLwG3LYsKQRgcRh75w7gIuZ7vBnYNVZ
//RTA7DgEEtEtXrOmm80oP8KLETGBIP1iFBLQsQGtmwxGasPB8WT84blCasS
fTJ9QkzILuVZZWGypeDYqpUU8kFKLVEDfROdkEKmosOKu9/aqgTp0JVfqZxP
54ey3SUXzN8GMEgJpNoHQUmABGMVCa8E2a2r9PQAjHa49fq1bjWFhCZCVakK
0qRf+jIqVam4TeeHfOdSc+dmNO6Xvjyj/BP9tptoJJtHNc40VYpeC76423KT
NtimYLB9p9MXC4hBuXnr1gN3+ECkUTObL7UBy1Za1fasprz5/75hw14M3rev
+WoX9eX47ODVILLmrObZorqNRBpc8Sqm5/bg3ZCHUxn3SuPxKpPJuQK7yITZ
VLFCv+uo2XuPi2GaMaj4V0yn6upfvtWLRP1F5yLqmfr6C0L58DY8Nnv2Fiup
0fXbVEYlUYnqKPZMfacRB0WNAeUlcX7IScV5oQ11KkDjm3Jl+5KhgldICHLF
qZM3ukEO97lT0XWtotXGjl3HA2pfSnlpXdr7YnBYjUJ+KEKNwRcvFOSAqDE8
t9pvl0JVQXa/gwkDtpUrmy6vJ5cM06+6ujozwQ7J73atBZrFPUpBXqTyUcn0
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
tb5FNYR8rFzkov8Djrm7ag==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CAMB", "[", "\"\<PSlinear1\>\"", "]"}], ",", 
      RowBox[{"CAMB", "[", "\"\<PSnonlinear1\>\"", "]"}]}], "}"}], "/.", 
    "cambdata"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBQQS++yFib1JlAgAAAEMAAAACAAAAS0wyo2cKI8DUo3g42ocYQAZurKNn
CiLA7Kdl9QdzGkBcTAWkZwohwMTxm3OiXRxABo3Eo2cKIMCP0Fq7vUYeQILp
akrPFB7AFMHmnhgWIEByfCFHzxQcwGaKv9XaBCFAGKv+SM8UGsDC/ptx9Osh
QIcnGknPFBjAK9AlqyHFIkBuWJ1FzxQWwLlNJcGEhiNAiZ1ARc+UFcCM++4A
krEjQH3XyEbPFBXATG4qj/jZI0C5y8RIz5QUwEUjP0Rm/yNAaRgNRc8UFMC3
nCi4fSEkQBTTHEjPlBPA1+WbKdM/JEDMnBBFzxQTwIdf32PoWSRAe1JLSs+U
EsDKqpYdJ28kQFxE3EnPFBLARtLg+dp+JECozYpHz5QRwNkGKNMpiCRAzE3W
Rc8UEcCdKiFZDYokQBFrCkbPlBDA8m4Z7k6DJEArRnVHzxQQwL4l7+YJdiRA
8w6ckZ4pD8DJ8oP+ClskQEpiq5KeKQ7AF1RAMDAwJEDHteCMnikNwJYTrx4q
+iNAJm63kZ4pDMDlmWKl6bcjQDSwQYqeKQvAwRZDPI9pI0CFgmeUnikKwAeJ
22jSHyNACMlOjp4pCcCXjBvLWNMiQKkJhpKeKQjAhmLPEcKNIkDwqCiLnikH
wEY+/XNDZCJAOuAsRXgqBsCHEKlA9DkiQEpGRYSdRwXAEdjDZHv/IUCDQ3Du
ZnsEwEyW1yirryFA+yOTz7fBA8DrWraaGEshQBnuKIR6FwPAixpRQffoIEA6
Ds2FT3oCwGJSCmJmnCBADnzMZFnoAcBKy3Oo8m0gQLRlOxoaYAHAfMs8IVNU
IEAg/3YwW+AAwH6++C8YPCBALXaQ7hxoAMB3Z6SYyBUgQOpofmAU7f+/OW4S
epe3H0BxwwLh3hX/v54/wTxfKB9AHvCuImhJ/r8RJ340hZweQIMAynmqhv2/
jo/WUxgvHkDvUq7gw8z8vyhrZl4P6B1AiaLTxe8a/L9xmvBs/rwdQJFrESSC
cPu/fY+LkFeWHUAlV+GV48z6v/dhHTyJXh1AAPS7KY4v+r/zFimO5w0dQEp4
q8wKmPm/aQGovpaqHED1Zugq7wX5vw/+MDssRRxA8E8wPf4U+L/MNo/Zxr0b
QHEHH1INJPe/GZ08c09qG0DzpQJbHDP2v8CHPwQREBtA4xD2bitC9b867WBD
wIEaQIKux3E6UfS/1GhTxoHwGUCxh4GPSWDzv9c4jhhiiBlAfHQmnFhv8r9+
KlACsxgZQCibAZ9nfvG/DEIm99WJGEBeJaC0do3wv/Fti400DRhAx7DHhAs5
77+UwzZ3QJcXQOJzQrEpV+2/DmmYjCwOF0DR5ivQR3Xrv/U/Yg6wjxZAiLTO
JZ3K4L9gybwNNZ8TQNNyJ7LJf8i/r0QgQXaTEECXOLiz4CrCP8xT/YGp3wpA
Ki/Pt8Vq3j+HmiLEp28EQO2u5TM=
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwBQQS++yFib1JlAgAAAEMAAAACAAAAS0wyo2cKI8DUo3g42ocYQAZurKNn
CiLA7Kdl9QdzGkBcTAWkZwohwMTxm3OiXRxABo3Eo2cKIMCP0Fq7vUYeQILp
akrPFB7AFMHmnhgWIEByfCFHzxQcwGaKv9XaBCFAGKv+SM8UGsDC/ptx9Osh
QIcnGknPFBjAK9AlqyHFIkBuWJ1FzxQWwLlNJcGEhiNAiZ1ARc+UFcCM++4A
krEjQH3XyEbPFBXAFnh+f7vYI0C5y8RIz5QUwOs0l3r//SNAaRgNRc8UFMCu
htee5x8kQBTTHEjPlBPAhjwHXAc+JEDMnBBFzxQTwMyk64zfVyRAe1JLSs+U
EsCzi4nU2GwkQFxE3EnPFBLADVwLpD18JECozYpHz5QRwEWoK5kyhSRAzE3W
Rc8UEcD7+utLsIYkQBFrCkbPlBDArTIsjn9/JEArRnVHzxQQwB0CZRu6cSRA
8w6ckZ4pD8C5GZVeMlYkQEpiq5KeKQ7A7phch88qJEDHteCMnikNwLUXhMNJ
9CNAJm63kZ4pDMB73sPhpbEjQDSwQYqeKQvArli6gCJjI0CFgmeUnikKwCj+
sz1kGSNACMlOjp4pCcBK2mjtOc0iQKkJhpKeKQjAKXruGSCIIkDwqCiLnikH
wBu2M7WAXiJAOuAsRXgqBsDGE1YMAjQiQEpGRYSdRwXAFXJoXkD6IUCDQ3Du
ZnsEwNnR3p/RrCFA+yOTz7fBA8CElWKuB00hQBnuKIR6FwPAExk9vxfxIEA6
Ds2FT3oCwGKt0ko8qiBADnzMZFnoAcCs9D/GLX8gQLRlOxoaYAHArM1ebM5m
IEAg/3YwW+AAwLpgMwS6TyBALXaQ7hxoAMDRDrLjmSwgQOpofmAU7f+/uYEj
QEvyH0BxwwLh3hX/v7BINDCjdh9AHvCuImhJ/r+n+neyqAAfQIMAynmqhv2/
QHMvCZSlHkDvUq7gw8z8v46g4c0Dah5AiaLTxe8a/L+CH4QylUQeQJFrESSC
cPu/78YwIrwiHkAlV+GV48z6v+raOoU49B1AAPS7KY4v+r9jXD/69bMdQEp4
q8wKmPm/lGJXCYRnHUD1Zugq7wX5v6taemSDGx1A8E8wPf4U+L9eT96hTbcc
QHEHH1INJPe/3i2xom13HEDzpQJbHDP2vw7aVSL6MxxA4xD2bitC9b8XLjej
OdIbQIKux3E6UfS/Komi4nVyG0Cxh4GPSWDzv31vw8o8LBtAfHQmnFhv8r/w
UZXAfuMaQCibAZ9nfvG/jdgZW32NGkBeJaC0do3wv9uLIZ/uQhpAx7DHhAs5
77+tvq9QQ/0ZQOJzQrEpV+2/REghgcaxGUDR5ivQR3Xrv7DbOh+ZbBlAiLTO
JZ3K4L/JDoJJCPgXQNNyJ7LJf8i/lm2VRGicFkCXOLiz4CrCPzspZT3ROxVA
Ki/Pt8Vq3j8ZS/a5grwTQMkm68A=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{-9.520321941270728, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{-9.520321941270728, 0.475266866208346}, {
    0, 10.269633088396683`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-8.517193191416238, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.111728083308073, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.824046010856292, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.600902459542082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.418580902748127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.264430222920869, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.1308988302963465`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.013115794639964, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.298317366548036, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.407945608651872, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1680, 991},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
CellContext->Notebook,
TrackCellChangeTimes->False,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 54, 1, 78, "Section",
 InitializationCell->True],
Cell[636, 25, 124, 3, 42, "Input",
 InitializationCell->True],
Cell[763, 30, 2621, 48, 418, "Input",
 InitializationCell->True],
Cell[3387, 80, 5692, 187, 1077, "Input",
 InitializationCell->True],
Cell[9082, 269, 1134, 31, 153, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[10253, 305, 50, 1, 78, "Section",
 InitializationCell->True],
Cell[10306, 308, 101, 2, 42, "Input",
 InitializationCell->True],
Cell[10410, 312, 156, 4, 42, "Input",
 InitializationCell->True],
Cell[10569, 318, 1913, 58, 109, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[12507, 380, 26, 0, 39, "Subsection"],
Cell[12536, 382, 23323, 541, 2089, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[35896, 928, 30, 0, 39, "Subsection"],
Cell[35929, 930, 4877, 117, 615, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[40843, 1052, 29, 0, 31, "Subsection"],
Cell[40875, 1054, 5275, 130, 549, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[46187, 1189, 31, 0, 31, "Subsection"],
Cell[46221, 1191, 7199, 186, 461, "Input",
 InitializationCell->True],
Cell[53423, 1379, 149, 3, 65, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53621, 1388, 23, 0, 78, "Section"],
Cell[53647, 1390, 156, 5, 42, "Input"],
Cell[CellGroupData[{
Cell[53828, 1399, 399, 12, 65, "Input"],
Cell[54230, 1413, 595, 11, 65, "Output"]
}, Open  ]],
Cell[54840, 1427, 607, 19, 42, "Input"],
Cell[55450, 1448, 192, 5, 42, "Input"],
Cell[55645, 1455, 205, 5, 42, "Input"],
Cell[55853, 1462, 359, 11, 65, "Input"],
Cell[56215, 1475, 360, 10, 42, "Input"],
Cell[CellGroupData[{
Cell[56600, 1489, 597, 15, 65, "Input"],
Cell[57200, 1506, 1055, 20, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58292, 1531, 128, 4, 42, "Input"],
Cell[58423, 1537, 91, 2, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58551, 1544, 513, 14, 42, "Input"],
Cell[59067, 1560, 251338, 4191, 364, 231003, 3856, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310442, 5756, 324, 9, 42, "Input"],
Cell[310769, 5767, 15314, 290, 257, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
