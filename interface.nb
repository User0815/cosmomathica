(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     98793,       2111]
NotebookOptionsPosition[     96818,       2043]
NotebookOutlinePosition[     97308,       2062]
CellTagsIndexPosition[     97265,       2059]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preamble", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<cosmomathicaInterface`\>\"", 
  "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"transfer", "::", "usage"}], "=", 
    "\"\<This function provides an interface to Eisensteins&Hu's fitting \
formula for the transfer function. It takes the reduced total matter density \
\!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\), the fraction of baryons \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(b\)]\)/\!\(\*SubscriptBox[\(\
\[CapitalOmega]\), \(M\)]\), the CMB temperature and the dimensionless Hubble \
constant as input, and returns the sound horizon, the peak k, the transfer \
function...\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"halofit", "::", "usage"}], "=", 
    "\"\<This function provides an interface to the halofit algorithm by \
Smith et al. (reimplemented in C by Martin Kilbinger). It takes the total \
matter density \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(M\)]\), the vacuum \
energy density \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(L\)]\), a shape \
factor, \!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\), \!\(\*SubscriptBox[\(n\), \
\(s\)]\), \!\(\*SubscriptBox[\(\[Beta]\), \(p\)]\), and a fixed redshift \!\(\
\*SubscriptBox[\(z\), \(0\)]\) as input, and returns the nonlinear matter \
power spectrum (computed in three ways: ...) at 20 different values of the \
scale factor and the convergence power spectrum in tabulated form.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosmicemu", "::", "usage"}], "=", 
    "\"\<This function provides an interface to the CosmicEmulator by Earl \
Lawrence. It takes \!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\), \
\!\(\*SubscriptBox[\(\[Omega]\), \(b\)]\), \!\(\*SubscriptBox[\(\[Sigma]\), \
\(8\)]\), \!\(\*SubscriptBox[\(n\), \(s\)]\), and the equation of state w, \
and returns the nonlinear matter power spectrum at five different redshifts \
as well as ...\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"camb", "::", "usage"}], "=", 
   "\"\<This function provides an interface to CAMB by Antony Lewis and \
Anthony Challinor. It takes \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(C\)]\), \
..., as well as a number of options as input, and returns various \
cosmological quantities. The distinction between parameters and options is in \
principle arbitrary. However, since some physical parameters are often \
assumed to take on a default value, they are being interpreted as an option \
here. The default options are ...\>\""}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CosmicEmu", "::", "OutsideBounds"}], "=", 
   "\"\<Parameter out of bounds. CosmicEmu requires `3` <= `1` <= `4`, but \
you have `1`=`2`.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Tcmb"}], "=", 
   "\"\<Temperature of the CMB (default:)\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Eigenstates"}], "=", 
   "\"\<NuMassEigenstates and NuMassFractions must have the same length  (can \
be zero).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "InvalidOption"}], "=", 
   "\"\<Option `1` is '`2`', but must be one of the following: `3`\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Lists"}], "=", 
   "\"\<The following options need to be non-empty lists of the same length: \
`1`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Error"}], "=", 
   "\"\<CAMB exited with the following error code: `1`\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "LinkBroken"}], "=", 
   "\"\<CAMB crashed. See if there is anything useful on stdout.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "OutsideBounds"}], "=", 
   "\"\<Parameter out of bounds. CAMB requires `3` <= `1` <= `4`, but you \
have `1`=`2`.\>\""}], ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"$location", "=", 
   RowBox[{"DirectoryName", "[", "$InputFileName", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"camb", "[", 
    RowBox[{
     RowBox[{"OmegaC_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaB_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaL_", "?", "NumericQ"}], ",", 
     RowBox[{"h_", "?", "NumericQ"}], ",", 
     RowBox[{"w_", "?", "NumericQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "link", ",", "result", ",", "resultfloat", ",", "resultint", ",", 
       "floats", ",", "ints", ",", "bool2int", ",", "initialcond", ",", 
       "nonlinear", ",", "massivenu", ",", "validatestring", ",", 
       "validatelists", ",", "validatelimits", ",", "limits", ",", "check", 
       ",", "getDimensions", ",", "dimensions", ",", "age", ",", "zre", ",", 
       "array"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"bool2int", "[", "b_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "b"}], ",", "1", ",", "0"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"validatestring", "[", 
        RowBox[{"op_", ",", "poss_"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"poss", ",", 
            RowBox[{"OptionValue", "[", "op", "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"CAMB", "::", "InvalidOption"}], ",", 
            RowBox[{"ToString", "[", "op", "]"}], ",", 
            RowBox[{"OptionValue", "[", "op", "]"}], ",", 
            RowBox[{"StringJoin", "@@", 
             RowBox[{"Riffle", "[", 
              RowBox[{"poss", ",", "\"\<, \>\""}], "]"}]}]}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"validatelimits", "[", 
        RowBox[{"op_", ",", "lower_", ",", "upper_"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"lower", "\[LessEqual]", 
            RowBox[{"OptionValue", "[", "op", "]"}], "\[LessEqual]", 
            "upper"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"CAMB", "::", "OutsideBounds"}], ",", "op", ",", 
            RowBox[{"OptionValue", "[", "op", "]"}], ",", "lower", ",", 
            "upper"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"validatelimits", "[", 
        RowBox[{"val_", ",", "name_", ",", "lower_", ",", "upper_"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"lower", "\[LessEqual]", "val", "\[LessEqual]", "upper"}], 
           ")"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"CAMB", "::", "OutsideBounds"}], ",", "name", ",", "val", 
            ",", "lower", ",", "upper"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getDimensions", "[", "list_", "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ";", 
          RowBox[{"r", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"i", "<", 
             RowBox[{"Length", "@", "list"}]}], ",", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"r", ",", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ";;", 
                  RowBox[{"i", "+", 
                   RowBox[{"list", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], "]"}]}], "]"}],
              ";", 
             RowBox[{"i", "=", 
              RowBox[{"i", "+", "1", "+", 
               RowBox[{"list", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "r"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "some", " ", "parameters", " ", "must", " ", "be", " ", "within", " ", 
        "certain", " ", "limits"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"limits", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ReionizationFraction", ",", "0", ",", "1.5"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"OpticalDepth", ",", "0", ",", ".9"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"h", ",", "\"\<h\>\"", ",", ".2", ",", "1."}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Tcmb", ",", "2.7", ",", "2.8"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Yhe", ",", ".2", ",", ".8"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"MasslessNeutrinos", ",", "0", ",", "3.1"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"MassiveNeutrinos", "?"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "OmegaB", ",", 
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(B\)]\)\>\"", ",", 
           RowBox[{".001", "/", 
            RowBox[{"h", "^", "2"}]}], ",", 
           RowBox[{"1.", "/", 
            RowBox[{"h", "^", "2"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "OmegaC", " ", ",", 
           "\"\<\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(C\)]\)\>\"", ",", 
           RowBox[{"0.", "/", 
            RowBox[{"h", "^", "2"}]}], ",", 
           RowBox[{"3.", "/", 
            RowBox[{"h", "^", "2"}]}]}], "}"}]}], "\[IndentingNewLine]", 
        "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"validatelists", "[", "ops_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"1", "!=", 
          RowBox[{"Length", "@", 
           RowBox[{"Union", "[", 
            RowBox[{"Length", "/@", 
             RowBox[{"OptionValue", "/@", "ops"}]}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"CAMB", "::", "Lists"}], ",", "ops"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validatelists", "[", 
       RowBox[{"{", 
        RowBox[{
        "ScalarSpectralIndex", ",", "ScalarRunning", ",", 
         "TensorSpectralIndex", ",", "RatioScalarTensorAmplitudes", ",", 
         "ScalarPowerAmplitude"}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"validatelists", "[", 
       RowBox[{"{", 
        RowBox[{"NuMassDegeneracies", ",", "NuMassFractions"}], "}"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"validatelimits", "[", 
         RowBox[{"Sequence", "@@", "#"}], "]"}], "&"}], "/@", "limits"}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"initialcond", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<vector\>\"", ",", "\"\<adiabatic\>\"", ",", "\"\<iso_CDM\>\"", 
         ",", "\"\<iso_baryon\>\"", ",", "\"\<iso_neutrino\>\"", ",", 
         "\"\<iso_neutrino_vel\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nonlinear", "=", 
       RowBox[{"{", 
        RowBox[{"\"\<none\>\"", ",", "\"\<pk\>\"", ",", "\"\<lens\>\""}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"massivenu", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<int\>\"", ",", "\"\<trunc\>\"", ",", "\"\<approx\>\"", ",", 
         "\"\<best\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"validatestring", "[", 
       RowBox[{"ScalarInitialCondition", ",", "initialcond"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validatestring", "[", 
       RowBox[{"NonLinear", ",", "nonlinear"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validatestring", "[", 
       RowBox[{"MassiveNuMethod", ",", "massivenu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"floats", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"OmegaC", ",", "OmegaB", ",", "OmegaL", ",", 
          RowBox[{"h", "*", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "OmegaNu", ",", "Tcmb", ",", "YHe", ",", "MasslessNeutrinos", ",",
              "NuMassDegeneracies", ",", "NuMassFractions", ",", 
             "ScalarSpectralIndex", ",", "ScalarRunning", ",", 
             "TensorSpectralIndex", ",", "RatioScalarTensorAmplitudes", ",", 
             "ScalarPowerAmplitude", ",", "PivotScalar", ",", "PivotTensor", 
             ",", "OpticalDepth", ",", "ReionizationRedshift", ",", 
             "ReionizationFraction", ",", "ReionizationDeltaRedshift", ",", 
             "MaxEtaK", ",", "MaxEtaKTensor", ",", "TransferKmax", ",", 
             "TransferRedshifts"}], "}"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ints", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"OptionValue", "[", "MassiveNeutrinos", "]"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "[", "NuMassFractions", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"initialcond", ",", 
              RowBox[{"OptionValue", "[", "ScalarInitialCondition", "]"}]}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"nonlinear", ",", 
              RowBox[{"OptionValue", "[", "NonLinear", "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "@", "ScalarSpectralIndex"}]}], ",", 
          RowBox[{"bool2int", "/@", 
           RowBox[{"{", 
            RowBox[{
            "DoReionization", ",", "UseOpticalDepth", ",", 
             "TransferHighPrecision", ",", "WantCMB", ",", "WantTransfer", 
             ",", "WantCls", ",", "WantScalars", ",", "WantVectors", ",", 
             "WantTensors", ",", "WantZstar", ",", " ", "WantZdrag"}], 
            "}"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "OutputNormalization", ",", "MaxEll", ",", "MaxEllTensor", ",", 
             "TransferKperLogInt"}], "}"}]}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "@", "TransferRedshifts"}]}], ",", 
          RowBox[{"bool2int", "/@", 
           RowBox[{"{", 
            RowBox[{
            "AccuratePolarization", ",", "AccurateReionization", ",", 
             "AccurateBB", ",", "DoLensing", ",", "OnlyTransfers", ",", 
             "DerivedParameters"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"massivenu", ",", 
              RowBox[{"OptionValue", "[", "MassiveNuMethod", "]"}]}], "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"$location", "<>", "\"\<ext/camb\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Global`CAMBrun", "[", 
        RowBox[{
         RowBox[{"N", "/@", "floats"}], ",", "ints"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ResetDirectory", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"result", "\[Equal]", "$Failed"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"CAMB", "::", "LinkBroken"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"resultfloat", ",", "resultint"}], "}"}], "=", "result"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"resultint", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"CAMB", "::", "Error"}], ",", 
           RowBox[{"resultint", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"resultint", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"resultint", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"dimensions", "=", 
       RowBox[{"getDimensions", "@", "resultint"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"age", ",", "zre"}], "}"}], "=", 
       RowBox[{"resultfloat", "[", 
        RowBox[{"[", 
         RowBox[{";;", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"resultfloat", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"resultfloat", ",", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"array", "=", 
          RowBox[{"Take", "[", 
           RowBox[{"resultfloat", ",", 
            RowBox[{"Times", "@@", "d"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"resultfloat", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"resultfloat", ",", 
            RowBox[{"Times", "@@", "d"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"resultfloat", ",", 
           RowBox[{"ArrayReshape", "[", 
            RowBox[{"array", ",", "d"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "dimensions"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"camb", "[", "\"\<Age\>\"", "]"}], "\[Rule]", "age"}], ",", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<zRec\>\"", "]"}], "\[Rule]", "zre"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<ints\>\"", "]"}], "->", "resultint"}], ",", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<floats\>\"", "]"}], "->", "resultfloat"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<CLscalar\>\"", "]"}], "\[Rule]", 
         RowBox[{"resultfloat", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "All", ",", "1", ",", "1"}], "]"}], "]"}]}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<CLvector\>\"", "]"}], "\[Rule]", 
         RowBox[{"resultfloat", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "All", ",", "1", ",", "1"}], "]"}], "]"}]}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<CLtensor\>\"", "]"}], "->", 
         RowBox[{"resultfloat", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "All", ",", "1", ",", "1"}], "]"}], "]"}]}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<PSlinear\>\"", "]"}], "->", 
         RowBox[{"Transpose", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "@", 
             RowBox[{"resultfloat", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ",", 
            RowBox[{"Flatten", "@", 
             RowBox[{"resultfloat", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<PSnonlinear\>\"", "]"}], "->", 
         RowBox[{"Transpose", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "@", 
             RowBox[{"resultfloat", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], ",", 
            RowBox[{"Flatten", "@", 
             RowBox[{"resultfloat", "[", 
              RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"camb", "[", "\"\<sigma8\>\"", "]"}], "->", 
         RowBox[{"resultfloat", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "camb", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tcmb", "\[Rule]", "2.7255"}], ",", 
     RowBox[{"OmegaNu", "\[Rule]", "0"}], ",", 
     RowBox[{"YHe", "\[Rule]", ".24"}], ",", 
     RowBox[{"MasslessNeutrinos", "\[Rule]", "3.046"}], ",", 
     RowBox[{"MassiveNeutrinos", "\[Rule]", "0"}], ",", 
     RowBox[{"NuMassDegeneracies", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"NuMassFractions", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"ScalarInitialCondition", "\[Rule]", "\"\<adiabatic\>\""}], ",", 
     
     RowBox[{"NonLinear", "\[Rule]", "\"\<none\>\""}], ",", 
     RowBox[{"WantCMB", "\[Rule]", "True"}], ",", 
     RowBox[{"WantTransfer", "\[Rule]", "True"}], ",", 
     RowBox[{"WantCls", "\[Rule]", "True"}], ",", 
     RowBox[{"ScalarSpectralIndex", "\[Rule]", 
      RowBox[{"{", ".96", "}"}]}], ",", 
     RowBox[{"ScalarRunning", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"TensorSpectralIndex", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"RatioScalarTensorAmplitudes", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"ScalarPowerAmplitude", "\[Rule]", 
      RowBox[{"{", "2.1*^-9", "}"}]}], ",", 
     RowBox[{"PivotScalar", "\[Rule]", ".05"}], ",", 
     RowBox[{"PivotTensor", "\[Rule]", ".05"}], ",", 
     RowBox[{"DoReionization", "\[Rule]", "True"}], ",", 
     RowBox[{"UseOpticalDepth", "\[Rule]", "False"}], ",", 
     RowBox[{"OpticalDepth", "\[Rule]", "0."}], ",", 
     RowBox[{"ReionizationRedshift", "\[Rule]", "10."}], ",", 
     RowBox[{"ReionizationFraction", "\[Rule]", "1."}], ",", 
     RowBox[{"ReionizationDeltaRedshift", "\[Rule]", ".5"}], ",", 
     RowBox[{"TransferHighPrecision", "\[Rule]", "False"}], ",", 
     RowBox[{"WantScalars", "\[Rule]", "True"}], ",", 
     RowBox[{"WantVectors", "\[Rule]", "True"}], ",", 
     RowBox[{"WantTensors", "\[Rule]", "True"}], ",", 
     RowBox[{"WantZstar", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"WantZdrag", "\[Rule]", "True"}], ",", 
     RowBox[{"OutputNormalization", "\[Rule]", "1"}], ",", 
     RowBox[{"MaxEll", "\[Rule]", "1500"}], ",", 
     RowBox[{"MaxEtaK", "\[Rule]", "3000."}], ",", 
     RowBox[{"MaxEtaKTensor", "\[Rule]", "800."}], ",", 
     RowBox[{"MaxEllTensor", "\[Rule]", "400"}], ",", 
     RowBox[{"TransferKmax", "\[Rule]", ".9"}], ",", 
     RowBox[{"TransferKperLogInt", "\[Rule]", "0"}], ",", 
     RowBox[{"TransferRedshifts", "\[Rule]", 
      RowBox[{"{", "0.", "}"}]}], ",", 
     RowBox[{"AccuratePolarization", "\[Rule]", "True"}], ",", 
     RowBox[{"AccurateReionization", "\[Rule]", "False"}], ",", 
     RowBox[{"AccurateBB", "\[Rule]", "False"}], ",", 
     RowBox[{"DoLensing", "\[Rule]", "True"}], ",", 
     RowBox[{"OnlyTransfers", "\[Rule]", "False"}], ",", 
     RowBox[{"DerivedParameters", "\[Rule]", "True"}], ",", 
     RowBox[{"MassiveNuMethod", "\[Rule]", "\"\<best\>\""}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Transfer", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"transfer", "[", 
     RowBox[{
      RowBox[{"omegaM_", "?", "NumericQ"}], ",", 
      RowBox[{"fBaryon_", "?", "NumericQ"}], ",", 
      RowBox[{"Tcmb_", "?", "NumericQ"}], ",", 
      RowBox[{"h_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "result", ",", "link", ",", "krange", ",", "fitonek", ",", "horizon", 
        ",", "peak"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"link", "=", 
        RowBox[{"Install", "[", 
         RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Global`TFSetParameters", "[", 
        RowBox[{
         RowBox[{"N", "@", "omegaM"}], ",", 
         RowBox[{"N", "@", "fBaryon"}], ",", 
         RowBox[{"N", "@", "Tcmb"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fitonek", "[", "k_", "]"}], ":=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sequence", "@@", 
           RowBox[{"Global`TFFitOneK", "[", "k", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Global`TFNoWiggles", "[", 
           RowBox[{
            RowBox[{"N", "@", "omegaM"}], ",", 
            RowBox[{"N", "@", "fBaryon"}], ",", 
            RowBox[{"N", "@", "h"}], ",", 
            RowBox[{"N", "@", "Tcmb"}], ",", "k"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Global`TFZeroBaryon", "[", 
           RowBox[{
            RowBox[{"N", "@", "omegaM"}], ",", 
            RowBox[{"N", "@", "h"}], ",", 
            RowBox[{"N", "@", "Tcmb"}], ",", "k"}], "]"}]}], "}"}]}], ";", 
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"krange", "=", 
        RowBox[{"10", "^", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "6."}], ",", "4.", ",", ".01"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"fitonek", "/@", "krange"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"horizon", "=", 
        RowBox[{"Global`TFSoundHorizon", "[", 
         RowBox[{
          RowBox[{"N", "@", "omegaM"}], ",", 
          RowBox[{"N", "@", "fBaryon"}], ",", 
          RowBox[{"N", "@", "h"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peak", "=", 
        RowBox[{"Global`TFkPeak", "[", 
         RowBox[{
          RowBox[{"N", "@", "omegaM"}], ",", 
          RowBox[{"N", "@", "fBaryon"}], ",", 
          RowBox[{"N", "@", "h"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transfer", "[", "\"\<soundhorizon\>\"", "]"}], "->", 
          "horizon"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<peak\>\"", "]"}], "->", "peak"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<kvalues\>\"", "]"}], "\[Rule]", 
          "krange"}], ",", "\[IndentingNewLine]", " ", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<full\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<baryon\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<cdm\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<nowiggles\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<zerobaryons\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"halofit", "[", 
    RowBox[{
     RowBox[{"OmegaM_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaL_", "?", "NumericQ"}], ",", 
     RowBox[{"gammaShape_", "?", "NumericQ"}], ",", 
     RowBox[{"sigma8_", "?", "NumericQ"}], ",", 
     RowBox[{"ns_", "?", "NumericQ"}], ",", 
     RowBox[{"betaP_", "?", "NumericQ"}], ",", 
     RowBox[{"z0_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"link", ",", 
       RowBox[{"Tf", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Kappa", "=", 
        RowBox[{"{", "}"}]}], ",", "arange", ",", "krange", ",", "ellrange"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"arange", "=", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{".01", ",", ".9999", ",", ".04"}], "]"}], "~", "Join", "~", 
        RowBox[{"{", ".99999", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"krange", "=", 
       RowBox[{"10", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "3", ",", ".1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellrange", "=", 
       RowBox[{"10", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "6", ",", ".1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Global`HFSetParameters", "[", 
           RowBox[{
            RowBox[{"N", "@", "OmegaM"}], ",", 
            RowBox[{"N", "@", "OmegaL"}], ",", 
            RowBox[{"N", "@", "gammaShape"}], ",", 
            RowBox[{"N", "@", "sigma8"}], ",", 
            RowBox[{"N", "@", "ns"}], ",", 
            RowBox[{"N", "@", "betaP"}], ",", 
            RowBox[{"N", "@", "z0"}], ",", "i"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Tf", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Global`HFGetPkNL", "[", 
               RowBox[{"a", ",", "k"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "arange"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "krange"}], "}"}]}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Kappa", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Global`HFGetKappa", "[", "ell", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ell", ",", "ellrange"}], "}"}]}], "]"}]}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Uninstall", "[", "link", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Just", " ", "return", " ", "the", " ", "raw", " ", "numbers"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"halofit", "[", "\"\<avalues\>\"", "]"}], "\[Rule]", 
         "arange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kvalues\>\"", "]"}], "\[Rule]", 
         "krange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<ellvalues\>\"", "]"}], "\[Rule]", 
         "ellrange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kappaBBKS\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<tfBBKS\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kappaPD96\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<tfPD96\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kappaHalofit\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<tfHalofit\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cosmicemu", "[", 
    RowBox[{
     RowBox[{"omegaM_", "?", "NumericQ"}], ",", 
     RowBox[{"omegaB_", "?", "NumericQ"}], ",", 
     RowBox[{"sigma8_", "?", "NumericQ"}], ",", 
     RowBox[{"ns_", "?", "NumericQ"}], ",", 
     RowBox[{"w_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "link", ",", "result", ",", "labels", ",", "limits", ",", "parameters", 
       ",", "check"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"labels", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(b\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(n\), \(s\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\)\>\"", ",", 
         "\"\<w\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"limits", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".12", ",", ".155"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".0214", ",", ".0235"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".85", ",", "1.05"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".61", ",", ".9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.3"}], ",", 
           RowBox[{"-", ".7"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "these", " ", "are", " ", "hard", " ", "limits", " ", "as", " ", 
         "given", " ", "by", " ", "the", " ", "authors", " ", "of", " ", 
         "the", " ", "cosmic", " ", "emulator"}], " ", "-", " ", 
        RowBox[{
        "the", " ", "program", " ", "will", " ", "crash", " ", "if", " ", 
         "any", " ", "parameter", " ", "is", " ", "outside", " ", "its", " ", 
         "bounds"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"parameters", "=", 
       RowBox[{"{", 
        RowBox[{"omegaM", ",", "omegaB", ",", "sigma8", ",", "ns", ",", "w"}],
         "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"check", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"parameters", ",", "limits"}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"check", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"CosmicEmu", "::", "OutsideBounds"}], ",", 
            RowBox[{"labels", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"parameters", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"limits", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"limits", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "check"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"And", "@@", "check"}]}], ",", 
        RowBox[{
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "a"}], "-", "1"}], ",", 
           RowBox[{"Global`CEGetPkNL", "[", 
            RowBox[{
             RowBox[{"N", "@", "omegaM"}], ",", 
             RowBox[{"N", "@", "omegaB"}], ",", 
             RowBox[{"N", "@", "sigma8"}], ",", 
             RowBox[{"N", "@", "ns"}], ",", 
             RowBox[{"N", "@", "w"}], ",", 
             RowBox[{
              RowBox[{"1", "/", "a"}], "-", "1"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", ".5", ",", "1.", ",", ".1"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "CosmicEmu", " ", "only", " ", "does", " ", "these", " ", "five", " ",
          "redshifts"}], ",", " ", 
        RowBox[{"everything", " ", "else", " ", "is", " ", "interpolated"}]}],
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Just", " ", "return", " ", "the", " ", "raw", " ", "numbers"}], 
       "*)"}], "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{"End", "[", " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", " ", "]"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Section"],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<interface.m\>\""}], 
   ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hfdata", "=", 
   RowBox[{"halofit", "[", 
    RowBox[{
    ".25", ",", ".75", ",", ".5", ",", ".8", ",", ".9", ",", ".7", ",", 
     "1.5"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cedata", "=", 
   RowBox[{"cosmicemu", "[", 
    RowBox[{".15", ",", ".022", ",", ".9", ",", ".9", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tfdata", "=", 
   RowBox[{"transfer", "[", 
    RowBox[{".15", ",", ".05", ",", "2.7", ",", ".7"}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cambdata", "=", 
   RowBox[{"camb", "[", 
    RowBox[{".2", ",", ".05", ",", ".75", ",", ".6", ",", 
     RowBox[{"-", "1."}], ",", 
     RowBox[{"DoLensing", "\[Rule]", "True"}], ",", 
     RowBox[{"NonLinear", "\[Rule]", "\"\<lens\>\""}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cambdata", "/.", 
  RowBox[{"Rule", "\[Rule]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"{", "#", "}"}], "]"}], "&"}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"camb", "[", "\<\"Age\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"zRec\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"ints\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"floats\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"CLscalar\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"CLvector\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"CLtensor\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"PSlinear\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"PSnonlinear\"\>", "]"}], ",", 
   RowBox[{"camb", "[", "\<\"sigma8\"\>", "]"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"camb", "[", "\"\<CLscalar\>\"", "]"}], "/.", "cambdata"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
vSdSSP26KYYSbWS+dqi2x+WPwXjf9OS6dhJ/qWU+x2rJfqnH1+P8byYaHzMo
t2odA5mb4F3UQfZzOrtODA6NQb1ynMJ4JxNt3h1c5inIhUd+X+2XdTGx06Yk
oVGJC32HqCuPdJP2xCjv6J7HBeU7T/JTe5iY3LxckbGcC89NXv3q7GWiZ8nR
zXkWZH95IThGrZ+JFsEfmwMcuTC2fYPA9r8kXsfF1ozt4wLDe73QrQGyPlOk
tcQDuUBbnZf4/h8TX3NSzQ1CueCq8LlHYIiJ3gExOir3uf/9foWJ728qnn+Z
xIWLHb22viMk3693H1uSy4XpfbsCk9lkfII301dUciFQwNWsdZSJOfZPUq2+
ciFmSC9VZYyM5yubdcs7uaBuPpO9gUv2ezdPh0+R/XJHnbR7MI+J279rqB0W
4IHN6htZOXwmXgvSidgpx4Pzk0VJ/eNkPxUX8+qYKg8ibRpMNSbJ+tvi3i20
iAdNIHbcboqJdVvE/VyNyX486ca20Gkm6tTggcvreHB/ceKX/BkmTitGtFht
5cHv9We5/2bJfnQioyvOhQf7CfviOYIszD09kU05yAOKmssiOyEWvjPeRAwF
8MDn3UeTS8IsPET/8PzieR587OsYyhVh4Z4RfUpDOA8yROvW94qy8FH8voci
UTz47FVhzRBn4bY/BWsL43lwbvHswHoJFgbdU1sy/wUPqtZmrQiSZGHNtbUB
q17zINOLqv1MioUT97oWj5fy4Iz27oLv0iw09bXZLVbDg4aWEq6ELAvpVtm7
oxt4IFLo22wsx0LDi4xpy188MC196rZPnoVWSxSPl/7hQUn+nZt3FVhYL6va
/G2ABwybI57liiw8xx4xucjhgUv/oY4hJRbaFp0vGZvkgWNTqZiaCgvzlm7y
nxDiQ+mi2C/rKSz0WSjpd1OSD2fqVlsep7LQ61RyY6s8H2qDavbE01ioyk7O
yqPw4XTpWa16OgvXuJZrMFl80Jq9FjHOYOGOIrvNoXP4sP2gVtJ8FgurHgno
qGrxoVHirPsWVRZuFXUZCNPhQ1X2++qTaizcX9iXFLeYD/2sld8T1Fl4MXSB
l4EhH2pKZiLqNFj40FJ0s/syPgyNbeZw57Aw6bvfaXdjPlB7dwrMmcvCqL/n
BpNW8WHPXftc63ksfHbAof7iaj5cqfOh+s1n4belv00XkPOk3OrmOdFaLNwk
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

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{3.2497185218556806`, 9.079517058453375*^-11},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{2.302585092994046, 
       FormBox["10", TraditionalForm]}, {2.995732273553991, 
       FormBox["20", TraditionalForm]}, {3.912023005428146, 
       FormBox["50", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {5.298317366548036, 
       FormBox["200", TraditionalForm]}, {6.214608098422191, 
       FormBox["500", TraditionalForm]}, {6.907755278982137, 
       FormBox["1000", TraditionalForm]}, {7.600902459542082, 
       FormBox["2000", TraditionalForm]}, {8.517193191416238, 
       FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {5.703782474656201, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {5.991464547107982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.396929655216146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.551080335043404, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.684611727667927, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.802394763324311, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.006367567650246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.294049640102028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{2.302585092994046, 
       FormBox["\"\"", TraditionalForm]}, {2.995732273553991, 
       FormBox["\"\"", TraditionalForm]}, {3.912023005428146, 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {5.298317366548036, 
       FormBox["\"\"", TraditionalForm]}, {6.214608098422191, 
       FormBox["\"\"", TraditionalForm]}, {6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {7.600902459542082, 
       FormBox["\"\"", TraditionalForm]}, {8.517193191416238, 
       FormBox["\"\"", TraditionalForm]}, {3.4011973816621555`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.6888794541139363`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.0943445622221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.248495242049359, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.382026634673881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.499809670330265, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {5.703782474656201, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {5.991464547107982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.396929655216146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.551080335043404, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.684611727667927, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {6.802394763324311, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.006367567650246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.294049640102028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{3.2497185218556806`, 7.312553498102598}, {
   9.079517058453375*^-11, 9.049726745034797*^-10}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{2.302585092994046, 
      FormBox["10", TraditionalForm]}, {2.995732273553991, 
      FormBox["20", TraditionalForm]}, {3.912023005428146, 
      FormBox["50", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {5.298317366548036, 
      FormBox["200", TraditionalForm]}, {6.214608098422191, 
      FormBox["500", TraditionalForm]}, {6.907755278982137, 
      FormBox["1000", TraditionalForm]}, {7.600902459542082, 
      FormBox["2000", TraditionalForm]}, {8.517193191416238, 
      FormBox["5000", TraditionalForm]}, {3.4011973816621555`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.6888794541139363`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.0943445622221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.248495242049359, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.382026634673881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.499809670330265, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {5.703782474656201, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {5.991464547107982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {6.396929655216146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {6.551080335043404, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {6.684611727667927, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {6.802394763324311, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {8.006367567650246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {8.294049640102028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLinearPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"camb", "[", "\"\<PSlinear\>\"", "]"}], ",", 
      RowBox[{"camb", "[", "\"\<PSnonlinear\>\"", "]"}]}], "}"}], "/.", 
    "cambdata"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjnswnGcUh9UtLE1Y+y3rupdvDbYZkiIind2TdZu2SGxIY10axqYina5o
hRIRNMlWEtWtS3QwTKSiIlUlUtK+b8alQaWkJkLcKmoFYbHWNdGvf5w588xz
fmd+nFi5RKaro6Mjpub/LVed2KZ1cXHTNY3zijELjv81QTEHR3h4HFjQWIN0
Y4RiNn76Wxldd9wW1CaLa4TSAX9DHme2d9pD8v50LaG0w2mJEwdzQtlwd/c/
FNtgmc2JqUURB4JTft4glCzsPmdc0srmQt/976i8Jb6u+iV5ZIELJcc6NYSS
wCupZmHx5TxITzqiJegEjpIVTtS38SA6yInKMzBnXstr/ZcHCjV/naAzMP9S
a4eLPgk9vZnrhNICP1OXyovsSWB6fbhK0C0wt3iqPcedBFoag+pDxwYDg7Mx
fiQYN7DWCDodV18UqrKPkiAaj6C8Ob5xpWzUIoyEfOGeTYJujplW4RJCQoJa
35fqZ4YXPzoUGOZPQsasjPJmONCpWCt3I2E7pXleQO7BIpq4tIZBAi51UwvI
3fizLeGVRhUPMh0eLwnIt/G+7ZGLrdU84LwIfSUgTXG1c9xMYRQPzH9krgpI
E/y94YVEujEPTlbUUPc0POt5k5lfy4XbfaPUf2Ncy8N/kzFc6AmwWhCQRrhG
LPS8yeLCeC1PIyB34XeClRbOwxywLC+jvCEO2N/vv97IAbfaPysN+AZ4rvNy
GPs8B+oKqyZdxPqYc/Dl4XhrDogcvYM1yXrYsHtiaOgHNsiQws3vgS4uIaMr
6B5sGD9rPb2LroufT+tJP29zgDpx4czIF2/htluR6yunHaB5MOjR9KQO7pAf
8ms+4ADvj1adq5bqYHXcwJREaw/n1oJd+pt2kOFgmjT6sj0UtPSWhHa8QWlP
ClhxL+1gtr9F4Dr5GmXl5WbQfO1A/waq2KC9RsVN9dE7yBZYrgmL2cJtlNSw
6biYYAv7hAbvdaRvIbG0Y8zH2xaEyVV3xx5uooT8qz5KU1to7Gbn0sw2UVJe
tfnKHzbQLsgcL5VtoCivkPt3ZDagin8V8ebhOpqQnLm6s2wNF7TZqtvkOjJx
v4MSFNZQqfAo4F9fQ1u9AT1cD2vQvdZV4V6qRWeahzTZwyyQu2qrfGpXkffw
+fqGDBaMHbvXIGnRoNNeRnI9tRVET2X0x3StoLNf0hWGkVYQ9NRxIPHZMvo4
lZf+eN4Scv0Vy5mqJVT/xMXNP80SehXL2jytGmVVfm2J5pgQlNHDKDdQo8N1
H3THJjDh6IwRX+q8gA4XxbhHqQkItPKNTQ2YR+z4lIJHpwgIL7CLLpLNIk1+
yLfCKQYsppV81Zgzg8J/LybfPcmA1J/0b1k0PEfeD/gVOZHm0HzvFHsz6Vdk
H/KJvlWWKRQmmL/Yu9QrYrd+6nnE3hAyTLP5WsdJUX9fhbPT3h3Rf4If79U=

      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjntMk2cUhwHbYZEhLXyU0pbevjKhQ1EhwljgDEXcJtVgR4AuIGoNMDdu
IozLGKBJRxAct8AGBEadOhRHh1TL2PvirMIQJ7ioiyAIBAgKFOgFGLp9++Pk
5MnvPCc/0bHUKJWdjY1NGDX/79SZmA2HfjG+UWbyXmFwIPrPcYpFWBkQsGfB
5AFxayMUC/HjnkaW3RgPjFsWrUSlAFeQ0W537npC1q48C1HJx7lp40ElCiG0
O72gmItV3JipxVARyLM71ohKDvZ/yajvForh4c0qymfj8zO/ZI0siKH+yF0T
UUnglRznT5KaJJCXcchCsAjc51k0f/+2BOIjt1G+K/5bmpZya0oCaqN0lWC5
4qyCLw/ZbyJhYLBwlah0wZV7wrQH+SS4BX5sJlgu2KrwKnXaTYJDrivVh4VL
Dfyg7r0kMLQcK8FiYT/uhaVWOQmhY0oqZ+L4ogSGOYqECyFb1wkWEx8Nl3/R
fogEI20f1c8Zn7K/t62J8gvmVFTujDO4CVcTfUnYyNa9kpFbcfk3jhvBTBJw
g59RRjrhwJgfAucnJVAoeLAkI9/GPjcj1jpaJSCaVMzLSEdsqlAIP4uVAPMn
N7OM3IJrprN7bOkSONp8hbp3wL9n0FSWS2K4/HCU+s/AZ5V+tbR4MQxEuC/I
yM1Yau1o9WGLYaxNYpKR9rhK1X/tyFMRsJsaqfwtrOIHSsa1IvBru99Cl9Jx
8rbgH6NzRXCtRjPhE0bDdidw/gmuCEK93pObsjbh2Lx7P5uvCkGF1H7hv9rh
XGF19PoHQhhL95i2Z9nh/Z8rD+hnBXAtrGZ25LQt7jJl7kqoFoDuSWTf9IQN
XhVXnNh5XAAfjmrOXIqzwereItMgKYAzVrnP0I1/UfL+2fCy3zyhWj9YrzC8
Qc7J7yY27vaEuSG9bMfEa3T9su+pYQ0faHWoec3hNXJv2Z6v9OcDZ0fKYnHI
Bkrepzn90Use7Ayhv2/I+wfZ6g+crEA8CMnStD/vXUfsNYNOVcuDzj+EpQ7O
62hFHHzRrOTBHVnhWINqDdE2DWRuduTBTNK88k3vKmqu635h6ODCV5bimcvk
KmoU1EaVJHChRR1QLT1vRZnZVp1cwAW7sv5m/wYL0j3ou7LziQek7rBo9raZ
kc1AI+N4uQc8P9KljdKb0KSZ/13dOx4QP1UwlNi/gh6Vq6p3Yw5EPvb6K+3p
MsrWJlXx0jlQul+9XDizhAoPR21vF3FgUL1sKbcY0beuYs6nBneILBhwbaIb
0bMn+V9nZ7jD4dnN0jjvBUSTPPpeIHWHg+77juVEvEKpF19UGYbZEFvNj69V
zaGzc8aUtnNsWMytP9tZMovU9GHNVBAbcq7TLrponyH5sH41VkOAruukcD3j
Fhqm345Ml7lCTQpz0ndpMHTBKbxnppMFBY7FUovXRGiPaFRR7M2E/wA8iOwx

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{-9.392661939480346, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["0.1`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {-2.3025850929940455`, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.214608098422191, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.809142990314028, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.521460917862246, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.298317366548036, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.115995809754082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.961845129926823, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.8283137373023015`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.710530701645918, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.912023005428146, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.506557897319982, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-3.2188758248682006`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.995732273553991, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.8134107167600364`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.659260036932778, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.5257286443082556`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.407945608651872, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.6094379124341003`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.203972804325936, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.916290731874155, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.6931471805599453, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.5108256237659905, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.35667494393873245`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2231435513142097, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.10536051565782616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{-9.392661939480346, 0.5672560436800179}, {
    0, 10.166167188148208`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{{{-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {-2.3025850929940455`, 
      FormBox["0.1`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-8.517193191416238, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.111728083308073, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.824046010856292, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.600902459542082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.418580902748127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.264430222920869, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.1308988302963465`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.013115794639964, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.214608098422191, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.809142990314028, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.521460917862246, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.298317366548036, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.115995809754082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.961845129926823, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.8283137373023015`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.710530701645918, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.912023005428146, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.506557897319982, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-3.2188758248682006`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.995732273553991, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.8134107167600364`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.659260036932778, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.5257286443082556`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.407945608651872, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.6094379124341003`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.203972804325936, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.916290731874155, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.6931471805599453, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.5108256237659905, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.35667494393873245`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2231435513142097, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.10536051565782616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{832, 981},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
CellContext->Notebook,
TrackCellChangeTimes->False,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 54, 1, 78, "Section",
 InitializationCell->True],
Cell[636, 25, 124, 3, 42, "Input",
 InitializationCell->True],
Cell[763, 30, 2591, 47, 726, "Input",
 InitializationCell->True],
Cell[3357, 79, 236, 6, 87, "Input",
 InitializationCell->True],
Cell[3596, 87, 169, 5, 42, "Input",
 InitializationCell->True],
Cell[3768, 94, 1126, 31, 329, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[4931, 130, 50, 1, 78, "Section",
 InitializationCell->True],
Cell[4984, 133, 101, 2, 42, "Input",
 InitializationCell->True],
Cell[5088, 137, 156, 4, 42, "Input",
 InitializationCell->True],
Cell[5247, 143, 20906, 488, 2815, "Input",
 InitializationCell->True],
Cell[26156, 633, 4493, 107, 637, "Input",
 InitializationCell->True],
Cell[30652, 742, 4938, 121, 593, "Input",
 InitializationCell->True],
Cell[35593, 865, 5563, 142, 637, "Input",
 InitializationCell->True],
Cell[41159, 1009, 149, 3, 65, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[41345, 1017, 23, 0, 78, "Section"],
Cell[41371, 1019, 156, 5, 42, "Input"],
Cell[41530, 1026, 203, 6, 42, "Input"],
Cell[41736, 1034, 192, 5, 42, "Input"],
Cell[41931, 1041, 163, 5, 42, "Input"],
Cell[42097, 1048, 306, 8, 42, "Input"],
Cell[CellGroupData[{
Cell[42428, 1060, 195, 6, 42, "Input"],
Cell[42626, 1068, 609, 12, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43272, 1085, 261, 6, 42, "Input"],
Cell[43536, 1093, 37633, 640, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81206, 1738, 322, 9, 42, "Input"],
Cell[81531, 1749, 15259, 290, 257, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
