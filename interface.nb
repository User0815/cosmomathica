(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     43650,       1109]
NotebookOptionsPosition[     41958,       1050]
NotebookOutlinePosition[     42449,       1069]
CellTagsIndexPosition[     42406,       1066]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Preamble", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<cosmomathicaInterface`\>\"", 
  "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"transfer", "::", "usage"}], "=", 
    "\"\<This function provides an interface to Eisensteins&Hu's fitting \
formula for the transfer function. It takes the reduced total matter density \
\!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\), the fraction of baryons \
\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(b\)]\)/\!\(\*SubscriptBox[\(\
\[CapitalOmega]\), \(M\)]\), the CMB temperature and the dimensionless Hubble \
constant as input, and returns the sound horizon, the peak k, the transfer \
function...\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"halofit", "::", "usage"}], "=", 
    "\"\<This function provides an interface to the halofit algorithm by \
Smith et al. (reimplemented in C by Martin Kilbinger). It takes the total \
matter density \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(M\)]\), the vacuum \
energy density \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(L\)]\), a shape \
factor, \!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\), \!\(\*SubscriptBox[\(n\), \
\(s\)]\), \!\(\*SubscriptBox[\(\[Beta]\), \(p\)]\), and a fixed redshift \!\(\
\*SubscriptBox[\(z\), \(0\)]\) as input, and returns the nonlinear matter \
power spectrum (computed in three ways: ...) at 20 different values of the \
scale factor and the convergence power spectrum in tabulated form.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cosmicemu", "::", "usage"}], "=", 
    "\"\<This function provides an interface to the CosmicEmulator by Earl \
Lawrence. It takes \!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\), \
\!\(\*SubscriptBox[\(\[Omega]\), \(b\)]\), \!\(\*SubscriptBox[\(\[Sigma]\), \
\(8\)]\), \!\(\*SubscriptBox[\(n\), \(s\)]\), and the equation of state w, \
and returns the nonlinear matter power spectrum at five different redshifts \
as well as ...\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"camb", "::", "usage"}], "=", 
   "\"\<This function provides an interface to CAMB by Antony Lewis and \
Anthony Challinor. It takes \!\(\*SubscriptBox[\(\[CapitalOmega]\), \(C\)]\), \
..., as well as a number of options as input, and returns various \
cosmological quantities. The distinction between parameters and options is in \
principle arbitrary. However, since some physical parameters are often \
assumed to take on a default value, they are being interpreted as an option \
here. The default options are ...\>\""}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Interface", "::", "CosmicEmu"}], "=", 
   "\"\<Parameter out of bounds. `3` <= `1` <= `4` required, but \
`1`=`2`.\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Tcmb"}], "=", 
   "\"\<Temperature of the CMB (default:)\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Eigenstates"}], "=", 
   "\"\<NuMassEigenstates and NuMassFractions must have the same length  (can \
be zero).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "InvalidOption"}], "=", 
   "\"\<Option `1` is '`2`', but must be one of the following: `3`\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Lists"}], "=", 
   "\"\<The following options need to be non-empty lists of the same length: \
`1`\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "Error"}], "=", 
   "\"\<CAMB exited with the following error code: `1`\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAMB", "::", "LinkBroken"}], "=", 
   "\"\<CAMB crashed. See if there is anything useful on stdout.\>\""}], 
  ";"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"$location", "=", 
   RowBox[{"DirectoryName", "[", "$InputFileName", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"camb", "[", 
    RowBox[{
     RowBox[{"OmegaC_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaB_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaL_", "?", "NumericQ"}], ",", 
     RowBox[{"h_", "?", "NumericQ"}], ",", 
     RowBox[{"w_", "?", "NumericQ"}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "link", ",", "result", ",", "resultfloat", ",", "resultint", ",", 
       "floats", ",", "ints", ",", "bool2int", ",", "initialcond", ",", 
       "nonlinear", ",", "massivenu", ",", "validateoption", ",", 
       "validatelists", ",", "limits", ",", "check"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"bool2int", "[", "b_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "@", "b"}], ",", "1", ",", "0"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"validateoption", "[", 
        RowBox[{"op_", ",", "poss_"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"poss", ",", 
            RowBox[{"OptionValue", "[", "op", "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"CAMB", "::", "InvalidOption"}], ",", 
            RowBox[{"ToString", "@", "op"}], ",", 
            RowBox[{"OptionValue", "@", "op"}], ",", 
            RowBox[{"StringJoin", "@@", "poss"}]}], 
           RowBox[{"(*", 
            RowBox[{"TODO", " ", "fix", " ", "the", " ", "string"}], "*)"}], 
           "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "some", " ", "parameters", " ", "must", " ", "be", " ", "within", " ", 
        "certain", " ", "limits"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"limits", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ReionizationFraction", ",", "0", ",", "1.5"}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"OpticalDepth", ",", "0", ",", ".9"}], "}"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"check", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
            RowBox[{"OptionValue", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "<=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
        "limits"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"validatelists", "[", "ops_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"1", "!=", 
          RowBox[{"Length", "@", 
           RowBox[{"Union", "[", 
            RowBox[{"Length", "/@", 
             RowBox[{"OptionValue", "/@", "ops"}]}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"CAMB", "::", "Lists"}], ",", "ops"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validatelists", "[", 
       RowBox[{"{", 
        RowBox[{
        "ScalarSpectralIndex", ",", "ScalarRunning", ",", 
         "TensorSpectralIndex", ",", "RatioScalarTensorAmplitudes", ",", 
         "ScalarPowerAmplitude"}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"validatelists", "[", 
       RowBox[{"{", 
        RowBox[{"NuMassDegeneracies", ",", "NuMassFractions"}], "}"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"0", "\[LessEqual]", 
            RowBox[{"OptionValue", "[", "ReionizationFraction", "]"}], 
            "\[LessEqual]", "1.5"}], "]"}], ",", 
          RowBox[{"Abort", "[", "]"}]}], "]"}], ";"}], " ", 
       RowBox[{"(*", "TODO", "*)"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"initialcond", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<vector\>\"", ",", "\"\<adiabatic\>\"", ",", "\"\<iso_CDM\>\"", 
         ",", "\"\<iso_baryon\>\"", ",", "\"\<iso_neutrino\>\"", ",", 
         "\"\<iso_neutrino_vel\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nonlinear", "=", 
       RowBox[{"{", 
        RowBox[{"\"\<none\>\"", ",", "\"\<pk\>\"", ",", "\"\<cl\>\""}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"massivenu", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<int\>\"", ",", "\"\<trunc\>\"", ",", "\"\<approx\>\"", ",", 
         "\"\<best\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"validateoption", "[", 
       RowBox[{"ScalarInitialCondition", ",", "initialcond"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validateoption", "[", 
       RowBox[{"NonLinear", ",", "nonlinear"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validateoption", "[", 
       RowBox[{"MassiveNuMethod", ",", "massivenu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"floats", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"OmegaC", ",", "OmegaB", ",", "OmegaL", ",", 
          RowBox[{"h", "*", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "OmegaNu", ",", "Tcmb", ",", "YHe", ",", "MasslessNeutrinos", ",",
              "NuMassDegeneracies", ",", "NuMassFractions", ",", 
             "ScalarSpectralIndex", ",", "ScalarRunning", ",", 
             "TensorSpectralIndex", ",", "RatioScalarTensorAmplitudes", ",", 
             "ScalarPowerAmplitude", ",", "PivotScalar", ",", "PivotTensor", 
             ",", "OpticalDepth", ",", "ReionizationRedshift", ",", 
             "ReionizationFraction", ",", "ReionizationDeltaRedshift", ",", 
             "MaxEtaK", ",", "MaxEtaKTensor", ",", "TransferKmax", ",", 
             "TransferRedshifts"}], "}"}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ints", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"OptionValue", "[", "MassiveNeutrinos", "]"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "[", "NuMassFractions", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"initialcond", ",", 
              RowBox[{"OptionValue", "[", "ScalarInitialCondition", "]"}]}], 
             "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"nonlinear", ",", 
              RowBox[{"OptionValue", "[", "NonLinear", "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "@", "ScalarSpectralIndex"}]}], ",", 
          RowBox[{"bool2int", "/@", 
           RowBox[{"{", 
            RowBox[{
            "DoReionization", ",", "UseOpticalDepth", ",", 
             "TransferHighPrecision", ",", "WantCMB", ",", "WantTransfer", 
             ",", "WantCls", ",", "WantScalars", ",", "WantVectors", ",", 
             "WantTensors", ",", "WantZstar", ",", " ", "WantZdrag"}], 
            "}"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "#", "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "OutputNormalization", ",", "MaxEll", ",", "MaxEllTensor", ",", 
             "TransferKperLogInt"}], "}"}]}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"OptionValue", "@", "TransferRedshifts"}]}], ",", 
          RowBox[{"bool2int", "/@", 
           RowBox[{"{", 
            RowBox[{
            "AccuratePolarization", ",", "AccurateReionization", ",", 
             "AccurateBB", ",", "DoLensing", ",", "OnlyTransfers", ",", 
             "DerivedParameters"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"massivenu", ",", 
              RowBox[{"OptionValue", "[", "MassiveNuMethod", "]"}]}], "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"SetDirectory", "[", 
       RowBox[{"$location", "<>", "\"\<ext/camb\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Global`CAMBrun", "[", 
        RowBox[{
         RowBox[{"N", "/@", "floats"}], ",", "ints"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ResetDirectory", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"result", "\[Equal]", "$Failed"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{"CAMB", "::", "LinkBroken"}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"resultfloat", ",", "resultint"}], "}"}], "=", "result"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"resultint", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"CAMB", "::", "Error"}], ",", 
           RowBox[{"resultint", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"resultint", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"resultint", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"resultint", ",", "resultfloat"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "camb", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tcmb", "\[Rule]", "2.7255"}], ",", 
     RowBox[{"OmegaNu", "\[Rule]", "0"}], ",", 
     RowBox[{"YHe", "\[Rule]", ".24"}], ",", 
     RowBox[{"MasslessNeutrinos", "\[Rule]", "3.046"}], ",", 
     RowBox[{"MassiveNeutrinos", "\[Rule]", "0"}], ",", 
     RowBox[{"NuMassDegeneracies", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"NuMassFractions", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"ScalarInitialCondition", "\[Rule]", "\"\<adiabatic\>\""}], ",", 
     
     RowBox[{"NonLinear", "\[Rule]", "\"\<none\>\""}], ",", 
     RowBox[{"WantCMB", "\[Rule]", "True"}], ",", 
     RowBox[{"WantTransfer", "\[Rule]", "True"}], ",", 
     RowBox[{"WantCls", "\[Rule]", "True"}], ",", 
     RowBox[{"ScalarSpectralIndex", "\[Rule]", 
      RowBox[{"{", ".96", "}"}]}], ",", 
     RowBox[{"ScalarRunning", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"TensorSpectralIndex", "\[Rule]", 
      RowBox[{"{", "0", "}"}]}], ",", 
     RowBox[{"RatioScalarTensorAmplitudes", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"ScalarPowerAmplitude", "\[Rule]", 
      RowBox[{"{", "2.1*^-9", "}"}]}], ",", 
     RowBox[{"PivotScalar", "\[Rule]", ".05"}], ",", 
     RowBox[{"PivotTensor", "\[Rule]", ".05"}], ",", 
     RowBox[{"DoReionization", "\[Rule]", "True"}], ",", 
     RowBox[{"UseOpticalDepth", "\[Rule]", "False"}], ",", 
     RowBox[{"OpticalDepth", "\[Rule]", "0."}], ",", 
     RowBox[{"ReionizationRedshift", "\[Rule]", "10."}], ",", 
     RowBox[{"ReionizationFraction", "\[Rule]", "1."}], ",", 
     RowBox[{"ReionizationDeltaRedshift", "\[Rule]", ".5"}], ",", 
     RowBox[{"TransferHighPrecision", "\[Rule]", "False"}], ",", 
     RowBox[{"WantScalars", "\[Rule]", "True"}], ",", 
     RowBox[{"WantVectors", "\[Rule]", "True"}], ",", 
     RowBox[{"WantTensors", "\[Rule]", "True"}], ",", 
     RowBox[{"WantZstar", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"WantZdrag", "\[Rule]", "True"}], ",", 
     RowBox[{"OutputNormalization", "\[Rule]", "1"}], ",", 
     RowBox[{"MaxEll", "\[Rule]", "1500"}], ",", 
     RowBox[{"MaxEtaK", "\[Rule]", "3000."}], ",", 
     RowBox[{"MaxEtaKTensor", "\[Rule]", "800."}], ",", 
     RowBox[{"MaxEllTensor", "\[Rule]", "400"}], ",", 
     RowBox[{"TransferKmax", "\[Rule]", ".9"}], ",", 
     RowBox[{"TransferKperLogInt", "\[Rule]", "0"}], ",", 
     RowBox[{"TransferRedshifts", "\[Rule]", 
      RowBox[{"{", "0.", "}"}]}], ",", 
     RowBox[{"AccuratePolarization", "\[Rule]", "True"}], ",", 
     RowBox[{"AccurateReionization", "\[Rule]", "False"}], ",", 
     RowBox[{"AccurateBB", "\[Rule]", "False"}], ",", 
     RowBox[{"DoLensing", "\[Rule]", "True"}], ",", 
     RowBox[{"OnlyTransfers", "\[Rule]", "False"}], ",", 
     RowBox[{"DerivedParameters", "\[Rule]", "True"}], ",", 
     RowBox[{"MassiveNuMethod", "\[Rule]", "\"\<best\>\""}]}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Transfer", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"transfer", "[", 
     RowBox[{
      RowBox[{"omegaM_", "?", "NumericQ"}], ",", 
      RowBox[{"fBaryon_", "?", "NumericQ"}], ",", 
      RowBox[{"Tcmb_", "?", "NumericQ"}], ",", 
      RowBox[{"h_", "?", "NumericQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "result", ",", "link", ",", "krange", ",", "fitonek", ",", "horizon", 
        ",", "peak"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"link", "=", 
        RowBox[{"Install", "[", 
         RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Global`TFSetParameters", "[", 
        RowBox[{
         RowBox[{"N", "@", "omegaM"}], ",", 
         RowBox[{"N", "@", "fBaryon"}], ",", 
         RowBox[{"N", "@", "Tcmb"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"fitonek", "[", "k_", "]"}], ":=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Sequence", "@@", 
           RowBox[{"Global`TFFitOneK", "[", "k", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Global`TFNoWiggles", "[", 
           RowBox[{
            RowBox[{"N", "@", "omegaM"}], ",", 
            RowBox[{"N", "@", "fBaryon"}], ",", 
            RowBox[{"N", "@", "h"}], ",", 
            RowBox[{"N", "@", "Tcmb"}], ",", "k"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Global`TFZeroBaryon", "[", 
           RowBox[{
            RowBox[{"N", "@", "omegaM"}], ",", 
            RowBox[{"N", "@", "h"}], ",", 
            RowBox[{"N", "@", "Tcmb"}], ",", "k"}], "]"}]}], "}"}]}], ";", 
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"krange", "=", 
        RowBox[{"10", "^", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "6."}], ",", "4.", ",", ".01"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"fitonek", "/@", "krange"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"horizon", "=", 
        RowBox[{"Global`TFSoundHorizon", "[", 
         RowBox[{
          RowBox[{"N", "@", "omegaM"}], ",", 
          RowBox[{"N", "@", "fBaryon"}], ",", 
          RowBox[{"N", "@", "h"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peak", "=", 
        RowBox[{"Global`TFkPeak", "[", 
         RowBox[{
          RowBox[{"N", "@", "omegaM"}], ",", 
          RowBox[{"N", "@", "fBaryon"}], ",", 
          RowBox[{"N", "@", "h"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"transfer", "[", "\"\<soundhorizon\>\"", "]"}], "->", 
          "horizon"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<peak\>\"", "]"}], "->", "peak"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<kvalues\>\"", "]"}], "\[Rule]", 
          "krange"}], ",", "\[IndentingNewLine]", " ", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<full\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<baryon\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<cdm\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<nowiggles\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"transfer", "[", "\"\<zerobaryons\>\"", "]"}], "\[Rule]", 
          RowBox[{"result", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"halofit", "[", 
    RowBox[{
     RowBox[{"OmegaM_", "?", "NumericQ"}], ",", 
     RowBox[{"OmegaL_", "?", "NumericQ"}], ",", 
     RowBox[{"gammaShape_", "?", "NumericQ"}], ",", 
     RowBox[{"sigma8_", "?", "NumericQ"}], ",", 
     RowBox[{"ns_", "?", "NumericQ"}], ",", 
     RowBox[{"betaP_", "?", "NumericQ"}], ",", 
     RowBox[{"z0_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"link", ",", 
       RowBox[{"Tf", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Kappa", "=", 
        RowBox[{"{", "}"}]}], ",", "arange", ",", "krange", ",", "ellrange"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"arange", "=", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{".01", ",", ".9999", ",", ".04"}], "]"}], "~", "Join", "~", 
        RowBox[{"{", ".99999", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"krange", "=", 
       RowBox[{"10", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "3", ",", ".1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ellrange", "=", 
       RowBox[{"10", "^", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "6", ",", ".1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Global`HFSetParameters", "[", 
           RowBox[{
            RowBox[{"N", "@", "OmegaM"}], ",", 
            RowBox[{"N", "@", "OmegaL"}], ",", 
            RowBox[{"N", "@", "gammaShape"}], ",", 
            RowBox[{"N", "@", "sigma8"}], ",", 
            RowBox[{"N", "@", "ns"}], ",", 
            RowBox[{"N", "@", "betaP"}], ",", 
            RowBox[{"N", "@", "z0"}], ",", "i"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Tf", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Global`HFGetPkNL", "[", 
               RowBox[{"a", ",", "k"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "arange"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "krange"}], "}"}]}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Kappa", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Global`HFGetKappa", "[", "ell", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ell", ",", "ellrange"}], "}"}]}], "]"}]}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Uninstall", "[", "link", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Just", " ", "return", " ", "the", " ", "raw", " ", "numbers"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"halofit", "[", "\"\<avalues\>\"", "]"}], "\[Rule]", 
         "arange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kvalues\>\"", "]"}], "\[Rule]", 
         "krange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<ellvalues\>\"", "]"}], "\[Rule]", 
         "ellrange"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kappaBBKS\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<tfBBKS\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kappaPD96\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<tfPD96\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<kappaHalofit\>\"", "]"}], "\[Rule]", 
         RowBox[{"Kappa", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"halofit", "[", "\"\<tfHalofit\>\"", "]"}], "\[Rule]", 
         RowBox[{"Tf", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cosmicemu", "[", 
    RowBox[{
     RowBox[{"omegaM_", "?", "NumericQ"}], ",", 
     RowBox[{"omegaB_", "?", "NumericQ"}], ",", 
     RowBox[{"sigma8_", "?", "NumericQ"}], ",", 
     RowBox[{"ns_", "?", "NumericQ"}], ",", 
     RowBox[{"w_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "link", ",", "result", ",", "labels", ",", "limits", ",", "parameters", 
       ",", "check"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"labels", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(M\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(b\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(n\), \(s\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(8\)]\)\>\"", ",", 
         "\"\<w\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"limits", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".12", ",", ".155"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".0214", ",", ".0235"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".85", ",", "1.05"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".61", ",", ".9"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.3"}], ",", 
           RowBox[{"-", ".7"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "these", " ", "are", " ", "hard", " ", "limits", " ", "as", " ", 
         "given", " ", "by", " ", "the", " ", "authors", " ", "of", " ", 
         "the", " ", "cosmic", " ", "emulator"}], " ", "-", " ", 
        RowBox[{
        "the", " ", "program", " ", "will", " ", "crash", " ", "if", " ", 
         "any", " ", "parameter", " ", "is", " ", "outside", " ", "its", " ", 
         "bounds"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"parameters", "=", 
       RowBox[{"{", 
        RowBox[{"omegaM", ",", "omegaB", ",", "sigma8", ",", "ns", ",", "w"}],
         "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"check", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<=", 
           RowBox[{"#", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"parameters", ",", "limits"}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"check", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"Interface", "::", "CosmicEmu"}], ",", 
            RowBox[{"labels", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"parameters", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"limits", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"limits", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "check"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"And", "@@", "check"}]}], ",", 
        RowBox[{
         RowBox[{"Return", "[", "$Failed", "]"}], ";", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"link", "=", 
       RowBox[{"Install", "[", 
        RowBox[{"$location", "<>", "\"\<ext/math_link\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", "a"}], "-", "1"}], ",", 
           RowBox[{"Global`CEGetPkNL", "[", 
            RowBox[{
             RowBox[{"N", "@", "omegaM"}], ",", 
             RowBox[{"N", "@", "omegaB"}], ",", 
             RowBox[{"N", "@", "sigma8"}], ",", 
             RowBox[{"N", "@", "ns"}], ",", 
             RowBox[{"N", "@", "w"}], ",", 
             RowBox[{
              RowBox[{"1", "/", "a"}], "-", "1"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", ".5", ",", "1.", ",", ".1"}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "CosmicEmu", " ", "only", " ", "does", " ", "these", " ", "five", " ",
          "redshifts"}], ",", " ", 
        RowBox[{"everything", " ", "else", " ", "is", " ", "interpolated"}]}],
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Uninstall", "[", "link", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Just", " ", "return", " ", "the", " ", "raw", " ", "numbers"}], 
       "*)"}], "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{"End", "[", " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", " ", "]"}]}], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Section"],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<interface.m\>\""}], 
   ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hfdata", "=", 
   RowBox[{"halofit", "[", 
    RowBox[{
    ".25", ",", ".75", ",", ".5", ",", ".8", ",", ".9", ",", ".7", ",", 
     "1.5"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cedata", "=", 
   RowBox[{"cosmicemu", "[", 
    RowBox[{".15", ",", ".022", ",", ".9", ",", ".9", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tfdata", "=", 
   RowBox[{"transfer", "[", 
    RowBox[{".15", ",", ".05", ",", "2.7", ",", ".7"}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cambdata", "=", 
  RowBox[{"camb", "[", 
   RowBox[{".2", ",", ".05", ",", ".75", ",", ".7", ",", 
    RowBox[{"-", "1."}], ",", 
    RowBox[{"WantCls", "\[Rule]", "True"}], ",", 
    RowBox[{"WantScalars", "\[Rule]", "True"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{324., {2., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0", ",", "3", ",", "3", ",", "50", ",", "1283", ",", "3", ",", 
             "3", ",", "50", ",", "1283", ",", "3", ",", "3", ",", "28", ",", 
             "488", ",", "2", ",", "67", ",", "1", ",", "2", ",", "1", ",", 
             "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
             ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14.154152047532857`", ",", "10.`", ",", 
             RowBox[{"-", "0.000127854178857251`"}], ",", 
             RowBox[{"-", "0.00015610782667304623`"}], ",", 
             RowBox[{"-", "0.0001905934931349418`"}], ",", 
             RowBox[{"-", "0.00023268261401271687`"}], ",", 
             RowBox[{"-", "0.00028404676307350134`"}], ",", 
             RowBox[{"-", "0.0003467224475900365`"}], ",", 
             RowBox[{"-", "0.0004231894861991983`"}], ",", 
             RowBox[{"-", "0.0005164656603715627`"}], ",", 
             RowBox[{"-", "0.0006302206352349701`"}], ",", 
             RowBox[{"-", "0.0007689126174318942`"}], ",", 
             RowBox[{"\[LeftSkeleton]", "999976", "\[RightSkeleton]"}], ",", 
             "0.`", ",", "2.5`*^-323", ",", "1.692578`*^-317", ",", "0.`", 
             ",", "0.`", ",", "0.`", ",", "6.89904765124926`*^-310", ",", 
             "6.8990479834267`*^-310", ",", "2.5`*^-323", ",", "0.`", ",", 
             "2.5`*^-323", ",", "6.89904765541206`*^-310"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{61., {0., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 87, 30314975506328667856, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{62., {0., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 87, 30314975506328667856, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{94., {2., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 87, 30314975506328667856, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{87., {0., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[87]]], "Output"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1680, 991},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
TrackCellChangeTimes->False,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "NaturalColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 54, 1, 78, "Section",
 InitializationCell->True],
Cell[636, 25, 124, 3, 42, "Input",
 InitializationCell->True],
Cell[763, 30, 2591, 47, 418, "Input",
 InitializationCell->True],
Cell[3357, 79, 213, 6, 42, "Input",
 InitializationCell->True],
Cell[3573, 87, 169, 5, 42, "Input",
 InitializationCell->True],
Cell[3745, 94, 926, 26, 131, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[4708, 125, 50, 1, 78, "Section",
 InitializationCell->True],
Cell[4761, 128, 101, 2, 42, "Input",
 InitializationCell->True],
Cell[4865, 132, 156, 4, 42, "Input",
 InitializationCell->True],
Cell[5024, 138, 14224, 326, 1275, "Input",
 InitializationCell->True],
Cell[19251, 466, 4493, 107, 615, "Input",
 InitializationCell->True],
Cell[23747, 575, 4938, 121, 549, "Input",
 InitializationCell->True],
Cell[28688, 698, 5559, 142, 461, "Input",
 InitializationCell->True],
Cell[34250, 842, 149, 3, 65, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[34436, 850, 23, 0, 78, "Section"],
Cell[34462, 852, 156, 5, 42, "Input"],
Cell[34621, 859, 203, 6, 42, "Input"],
Cell[34827, 867, 192, 5, 42, "Input"],
Cell[35022, 874, 163, 5, 42, "Input"],
Cell[CellGroupData[{
Cell[35210, 883, 272, 6, 42, "Input"],
Cell[35485, 891, 6445, 155, 192, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
